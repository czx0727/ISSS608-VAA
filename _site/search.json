[
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "This hands-on exercise is on Beyond ggplot2 Fundamentals.\n\n\n\n\n\n\nZhixuan’s personal learning outcomes\n\n\n\n\nLearn ggplot2 extensions\nUnderstanding how it can be linked to work\n\n\n\n\n\nIn this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlot is hard to visualise. Not recommended as I cannot see anything\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlot shows clearly the points as well as the student 289, 321, 305, 177, 227\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis link shows more about ggplot2 Themes.\n\n\nI will try a few more themes:\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_test() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_void() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n The Economist theme is used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\nI proceed to try another theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of English scores\") +\n  theme_stata()\n\n\n\n\n\n\n\nFrom guidance of Prof Kam, hrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nVertical grid-line is removed. To take note\n\n\n\n\n\nMath histogram is plot\n\nThe code\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np1\n\n\n\n\n\n\n\nEnglish histogram is plot\n\nThe code\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2\n\n\n\n\n\n\n\nI draw a scatterplot for English score versus Maths score by as shown below\n\nThe code\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhat if I need to combine more? 😅\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlease note on the following\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n\nPlease refer this link for more\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nI change to the following\n\n(p1 / p2 / p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nFrom guidance of Prof, with inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNot as appealing and potentially confusing. But good to know I can insert a chart inside another\n\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is nice! To take note for work and assignment in this course\n\n\nI try with wsj theme:\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#installing-and-loading-the-required-libraries",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "In this exercise, beside tidyverse, four R packages will be used. They are:\n\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\nCode chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#importing-data",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#importing-data",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#beyond-ggplot2-annotation-ggrepel",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#beyond-ggplot2-annotation-ggrepel",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlot is hard to visualise. Not recommended as I cannot see anything"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#working-with-ggrepel",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#working-with-ggrepel",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlot shows clearly the points as well as the student 289, 321, 305, 177, 227"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#beyond-ggplot2-themes",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#beyond-ggplot2-themes",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis link shows more about ggplot2 Themes.\n\n\nI will try a few more themes:\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_test() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_void() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#working-with-ggtheme-package",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#working-with-ggtheme-package",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The Economist theme is used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\nI proceed to try another theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of English scores\") +\n  theme_stata()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#working-with-hrbthems-package",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#working-with-hrbthems-package",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "From guidance of Prof Kam, hrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nVertical grid-line is removed. To take note"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#beyond-single-graph",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#beyond-single-graph",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "Math histogram is plot\n\nThe code\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np1\n\n\n\n\n\n\n\nEnglish histogram is plot\n\nThe code\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np2\n\n\n\n\n\n\n\nI draw a scatterplot for English score versus Maths score by as shown below\n\nThe code\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#combining-two-ggplot2-graphs",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWhat if I need to combine more? 😅"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#combining-three-ggplot2-graphs",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "Note\n\n\n\nPlease note on the following\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\n\nPlease refer this link for more\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nI change to the following\n\n(p1 / p2 / p3)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#creating-a-composite-figure-with-tag",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "From guidance of Prof, with inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#creating-figure-with-insert",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#creating-figure-with-insert",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNot as appealing and potentially confusing. But good to know I can insert a chart inside another"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "hands_on_ex/hands_on_ex02/hands_on_ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-On Ex 2",
    "section": "",
    "text": "The plotThe code\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is nice! To take note for work and assignment in this course\n\n\nI try with wsj theme:\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex03/hands_on_ex03.1.html",
    "href": "hands_on_ex/hands_on_ex03/hands_on_ex03.1.html",
    "title": "Hands-On Ex 3.1",
    "section": "",
    "text": "This hands-on exercise is on Programming Interactive Data Visualisation with R\n\n\n\n\n\n\nZhixuan’s personal learning outcomes\n\n\n\n\nLearn and create interactive data visualisation\nLink it back to work and potential project?\n\n\n\nThe following R packages will be used:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex03/hands_on_ex03.1.html#interactive-data-visualisation---crosstalk-methods",
    "href": "hands_on_ex/hands_on_ex03/hands_on_ex03.1.html#interactive-data-visualisation---crosstalk-methods",
    "title": "Hands-On Ex 3.1",
    "section": "Interactive Data Visualisation - crosstalk methods!",
    "text": "Interactive Data Visualisation - crosstalk methods!\n\nInteractive Data Table: DT package\n😱\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\nLinked brushing: crosstalk method\n😱\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex03/hands_on_ex03.2.html",
    "href": "hands_on_ex/hands_on_ex03/hands_on_ex03.2.html",
    "title": "Hands-on Ex3.2",
    "section": "",
    "text": "This hands-on exercise is on Programming Animated Statistical Graphics with R\n\n\n\n\n\n\nZhixuan’s personal learning outcomes\n\n\n\n\nLearn and create animated statistical graphics\nLink it back to work and potential project?\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nTips from Prof Kam: Before you start making animated graphs, you should first ask yourself: Does it makes sense to go through the effort? If you are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if you are giving a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts.\n\n\n\n\nI will load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant's fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\n\nFinally new dataset!! 😄\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\nI have read the important points located here\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe basic ggplot2 functions are used to create a static bubble plot as shown below.\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInteresting plot. But I am trying to understand what it means 🙃\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\nThis is 😱\n\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNote that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex03/hands_on_ex03.2.html#animated-data-visualisation-gganimate-methods",
    "href": "hands_on_ex/hands_on_ex03/hands_on_ex03.2.html#animated-data-visualisation-gganimate-methods",
    "title": "Hands-on Ex3.2",
    "section": "",
    "text": "I have read the important points located here\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe basic ggplot2 functions are used to create a static bubble plot as shown below.\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInteresting plot. But I am trying to understand what it means 🙃\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')          \n\n\n\n\nThis is 😱"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex03/hands_on_ex03.2.html#animated-data-visualisation-plotly",
    "href": "hands_on_ex/hands_on_ex03/hands_on_ex03.2.html#animated-data-visualisation-plotly",
    "title": "Hands-on Ex3.2",
    "section": "",
    "text": "The plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nNote that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html",
    "title": "Hands-on Ex 4",
    "section": "",
    "text": "This hands-on exercise covers all of the information from this link.\n\nHands-on Exercise 4: Visualising Distribution\nHands-on Exercise 4: Visual Statistical Analysis\nHands-on Exercise 4: Visualising Uncertainty\nHands-on Exercise 4: Building Funnel Plot with R\n\n\n\n\n\n\n\nZhixuan’s personal learning outcomes:\n\n\n\n\nUnderstand and do visualisation distribution\nUnderstand and apply visual statistical analysis\nUnderstand and apply visualizing uncertainty\nUnderstand and apply Funnel Plots for Fair Comparisons\nApply and link it to take home exercise, project and work"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-distribution-with-ridgeline-plot",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-distribution-with-ridgeline-plot",
    "title": "Hands-on Ex 4",
    "section": "Visualising Distribution with Ridgeline Plot",
    "text": "Visualising Distribution with Ridgeline Plot\nThe ridgeline plot below is plotted by using geom_density_ridges(). Please read more from here.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\nI will try with Math scores:\n\nggplot(exam, \n       aes(x = MATHS, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Math grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\nVarying fill colors along the x axis\n\nThe plotThe code\n\n\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nColour seems to be nice\n\n\nI try with Math Score\n\nggplot(exam, \n       aes(x = MATHS, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Math grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\nPicking joint bandwidth of 3.63\n\n\n\n\n\n\n\nMapping the probabilities directly onto colour\nFrom prof, figure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nThe plotThe code\n\n\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\nRidgeline plots with quantile lines\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figure below.\n\nThe plotThe code\n\n\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nI can specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown below.\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\nPicking joint bandwidth of 3.18"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-distribution-with-raincloud-plot",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on Ex 4",
    "section": "Visualising Distribution with Raincloud Plot",
    "text": "Visualising Distribution with Raincloud Plot\n\nPlotting a Half Eye graph\nI will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\nThis will produce a Half Eye visualization, which is contains a half-density and a slab-interval.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\nAdding the boxplot with geom_boxplot()\nNext, we will add the second geometry layer using geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\nAdding the Dot Plots with stat_dots()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\nFinishing touch\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\nLet me try with Math data and another theme 💪\n\nggplot(exam, \n       aes(x = RACE, \n           y = MATHS)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_wsj()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-models",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-models",
    "title": "Hands-on Ex 4",
    "section": "Visualising Models",
    "text": "Visualising Models"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#installing-and-loading-the-required-libraries",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Ex 4",
    "section": "Installing and loading the required libraries",
    "text": "Installing and loading the required libraries\n\npacman::p_load(readxl, performance, parameters, see)\n\n\nImporting Excel file: readxl methods\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\n\nMultiple Regression Model using lm()\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nModel Diagnostic: checking for multicolinearity\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\nVariable `Component` is not in your data frame :/\n\n\n\n\n\n\n\nModel Diagnostic: checking normality assumption\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n &lt;- check_normality(model1)\n\n\nplot(check_n)\n\nFor confidence bands, please install `qqplotr`.\n\n\n\n\n\n\n\nModel Diagnostic: Check model for homogeneity of variances\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\n\nplot(check_h)\n\n\n\n\n\n\nModel Diagnostic: Complete check\n\ncheck_model(model1)\n\n\n\n\n\n\nVisualising Regression Parameters: see methods\n\nplot(parameters(model1))\n\n\n\n\n\n\nVisualising Regression Parameters: ggcoefstats() methods\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualizing-the-uncertainty-of-point-estimates-ggplot2-methods",
    "title": "Hands-on Ex 4",
    "section": "Visualizing the uncertainty of point estimates: ggplot2 methods",
    "text": "Visualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\nNext, the code chunk below will be used to display my_sum tibble data frame in an html table format.\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\nNow I will plot the standard error bars of mean maths score by race as shown below.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\nPlotting confidence interval of point estimates\nI can plot the confidence intervals of mean maths score by race.\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\nI learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race:\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-uncertainty-ggdist-package",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-uncertainty-ggdist-package",
    "title": "Hands-on Ex 4",
    "section": "Visualising Uncertainty: ggdist package",
    "text": "Visualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\nI plot with English score\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = ENGLISH)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median english score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\nWarning: `fill_type = \"gradient\"` is not supported by the current graphics device, which\nis `\"png\"`.\nℹ Falling back to `fill_type = \"segments\"`.\nℹ If you believe your current graphics device does support `fill_type =\n  \"gradient\"` but auto-detection failed, try setting `fill_type = \"gradient\"`\n  explicitly. If this causes the gradient to display correctly, then this\n  warning is likely a false positive caused by the graphics device failing to\n  properly report its support for the `\"LinearGradient\"` pattern via\n  `grDevices::dev.capabilities()`. Consider reporting a bug to the author of\n  the graphics device.\nℹ See the documentation for `fill_type` in `ggdist::geom_slabinterval()` for\n  more information.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis is nice!"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops",
    "title": "Hands-on Ex 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = RACE), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)\n\n\n\n\n😱😱😱"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-on Ex 4",
    "section": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n\n\n\n\n😱😱😱"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#installing-and-launching-r-packages",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#installing-and-launching-r-packages",
    "title": "Hands-on Ex 4",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#importing-data",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#importing-data",
    "title": "Hands-on Ex 4",
    "section": "Importing Data",
    "text": "Importing Data\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\nRows: 267 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): City, District, Sub-district\ndbl (4): Sub-district ID, Positive, Recovered, Death\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#funnelplotr-methods",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#funnelplotr-methods",
    "title": "Hands-on Ex 4",
    "section": "FunnelPlotR methods",
    "text": "FunnelPlotR methods\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nNote\n\n\n\nThis looks good!!"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "href": "hands_on_ex/hands_on_ex04/hands_on_ex04.html#funnel-plot-for-fair-visual-comparison-ggplot2-methods",
    "title": "Hands-on Ex 4",
    "section": "Funnel Plot for Fair Visual Comparison: ggplot2 methods",
    "text": "Funnel Plot for Fair Visual Comparison: ggplot2 methods\n\nComputing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\nggplot2 functions are used to plot a static funnel plot.\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSeems to be a bit confusing to me. Will try to understand the plot\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly\n\n\n\n\n\n😱"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html",
    "title": "Hands-on Ex 5",
    "section": "",
    "text": "This hands-on exercise covers all of the information from this link.\n\nBuilding Ternary Plot with R.\nVisual Correlation Analysis.\nVisual Multivariate Analysis with Heatmap.\nVisual Multivariate Analysis with Parallel Coordinates Plot.\nTreemap Visualisation with R\n\n😱 So many exercises in one hands-on!\n\n\n\n\n\n\nZhixuan’s personal outcome\n\n\n\n\nI will try to follow all and learn all these (despite CNY 😂)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages",
    "title": "Hands-on Ex 5",
    "section": "Installing and launching R packages",
    "text": "Installing and launching R packages\n2 main R packages will be used in this hands-on exercise, they are:\n\nggtern, a ggplot extension specially designed to plot ternary diagrams. The package will be used to plot static ternary plots.\nPlotly R, an R package for creating interactive web-based graphs via plotly’s JavaScript graphing library, plotly.js . The plotly R libary contains the ggplotly function, which will convert ggplot2 figures into a Plotly object.\n\n\npacman::p_load('plotly', 'tidyverse')\n\n\nrequire(devtools)\ninstall_version(\"ggtern\", version = \"3.4.1\", repos = \"http://cran.us.r-project.org\")\n\n\n\n\n\n\n\nNote\n\n\n\nggtern is version 3.2.1. It can be used for this exercise 😀\n\n\n\nlibrary(ggtern)\n\nRegistered S3 methods overwritten by 'ggtern':\n  method           from   \n  grid.draw.ggplot ggplot2\n  plot.ggplot      ggplot2\n  print.ggplot     ggplot2\n\n\n--\nRemember to cite, run citation(package = 'ggtern') for further info.\n--\n\n\n\nAttaching package: 'ggtern'\n\n\nThe following objects are masked from 'package:ggplot2':\n\n    aes, annotate, ggplot, ggplot_build, ggplot_gtable, ggplotGrob,\n    ggsave, layer_data, theme_bw, theme_classic, theme_dark,\n    theme_gray, theme_light, theme_linedraw, theme_minimal, theme_void\n\n\n\nImporting Data\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nRows: 108126 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): PA, SZ, AG\ndbl (2): Year, Population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPreparing the Data\nI will use the mutate function to derive 3 new measures: young, active and old:\n\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#plotting-ternary-diagram-with-r",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#plotting-ternary-diagram-with-r",
    "title": "Hands-on Ex 5",
    "section": "Plotting Ternary Diagram with R",
    "text": "Plotting Ternary Diagram with R\nUse ggtern() function of ggtern package to create a simple ternary plot.\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nPlotting an interative ternary diagram\nI will use the plot_ly() function of Plotly R.\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n\nNo scatterternary mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-1",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-1",
    "title": "Hands-on Ex 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\nI will use the following packages below:\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n\n\nImporting Data\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")\n\nRows: 6497 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): type\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#building-correlation-matrix-pairs-method",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#building-correlation-matrix-pairs-method",
    "title": "Hands-on Ex 5",
    "section": "Building Correlation Matrix: pairs() method",
    "text": "Building Correlation Matrix: pairs() method\n\nBuilding a basic correlation matrix\nA scatter plot matrix of Wine Quality Data is plotted below. It is a 11 by 11 matrix.\n\npairs(wine[,1:11])\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\nDrawing the lower corner\nTo show the lower half of the correlation matrix, the upper.panel argument will be used as shown in the code chunk below.\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\nSimilarly, you can display the upper half of the correlation matrix by using the code chun below.\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\nIncluding with correlation coefficients\nTo show the correlation coefficient of each pair of variables instead of a scatter plot, panel.cor function will be used. This will also show higher correlations in a larger font.\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#visualising-correlation-matrix-ggcormat",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#visualising-correlation-matrix-ggcormat",
    "title": "Hands-on Ex 5",
    "section": "Visualising Correlation Matrix: ggcormat()",
    "text": "Visualising Correlation Matrix: ggcormat()\nOne of the major limitation of the correlation matrix is that the scatter plots appear very cluttered when the number of observations is relatively large (i.e. more than 500 observations). To over come this problem, Corrgram data visualisation technique suggested by D. J. Murdoch and E. D. Chow (1996) and Friendly, M (2002) and will be used.\n\nggstatsplot::ggcorrmat(data = wine, cor.vars = 1:11)\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#building-multiple-plots",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#building-multiple-plots",
    "title": "Hands-on Ex 5",
    "section": "Building multiple plots",
    "text": "Building multiple plots\ngrouped_ggcorrmat() of ggstatsplot. is used\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#visualising-correlation-matrix-using-corrplot-package",
    "title": "Hands-on Ex 5",
    "section": "Visualising Correlation Matrix using corrplot Package",
    "text": "Visualising Correlation Matrix using corrplot Package\n\nGetting started with corrplot\nIn the code chunk below, cor() of R Stats is used to compute the correlation matrix of wine data frame.\n\nwine.cor &lt;- cor(wine[, 1:11])\n\nNext, corrplot() is used to plot the corrgram by using all the default setting as shown in the code chunk below.\n\ncorrplot(wine.cor)\n\n\n\n\n\n\nWorking with visual geometrics\nThe default visual geometric of corrplot matrix is circle. However, this default setting can be changed by using the method argument as shown in the code chunk below.\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nI try with other methods - square and pie\n\n\n\ncorrplot(wine.cor, \n         method = \"square\") \n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"pie\") \n\n\n\n\n\n\nWorking with layout\ncorrplor() supports three layout types, namely: “full”, “upper” or “lower”. The default is “full” which display full matrix. The default setting can be changed by using the type argument of corrplot().\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nI try with other method\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.srt = 45)\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.pos = 'n')\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.cex = 0.5)\n\n\n\n\n\n\nWorking with mixed layout\nIn order to create a coorgram with mixed layout, the corrplot.mixed(), a wrapped function for mixed visualisation style will be used.\nFigure below shows a mixed layout corrgram plotted using wine quality data.\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\nCombining corrgram with the significant test\nWith corrplot package, we can use the cor.mtest() to compute the p-values and confidence interval for each pair of variables.\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\nReordering a correlation matrix using hclust\nIf using hclust, corrplot() can draw rectangles around the corrgram based on the results of hierarchical clustering.\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-2",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-2",
    "title": "Hands-on Ex 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#importing-and-preparing-the-data-set",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#importing-and-preparing-the-data-set",
    "title": "Hands-on Ex 5",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nImporting the data set\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nPreparing the data\n\nrow.names(wh) &lt;- wh$Country\n\nWarning: Setting row names on a tibble is deprecated.\n\n\n\n\nTransforming the data frame into a matrix\nThe code chunk below will be used to transform wh data frame into a data matrix.\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)\n\n\n\nheatmap() of R Stats\nIn this sub-section, we will plot a heatmap by using heatmap() of Base Stats. The code chunk is given below.\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#creating-interactive-heatmap",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#creating-interactive-heatmap",
    "title": "Hands-on Ex 5",
    "section": "Creating Interactive Heatmap",
    "text": "Creating Interactive Heatmap\n\nWorking with heatmaply\nheatmaply is an R package for building interactive cluster heatmap that can be shared online as a stand-alone HTML file. It is designed and maintained by Tal Galili.\n\nheatmaply(mtcars)\n\n\n\n\n\nThe code chunk below shows the basic syntax needed to create n interactive heatmap by using heatmaply package.\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\nData trasformation\n\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n\nClustering algorithm\n\n\nManual approach\nIn the code chunk below, the heatmap is plotted by using hierachical clustering algorithm with “Euclidean distance” and “ward.D” method.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\nStatistical approach\nIn order to determine the best clustering method and number of cluster the dend_expend() and find_k() functions of dendextend package will be used.\nFirst, the dend_expend() will be used to determine the recommended clustering method to be used.\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\nSeriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\nRegistered S3 method overwritten by 'gclus':\n  method         from     \n  reorder.hclust seriation\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\ni try with different colour\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n           colors = heat.colors(100))\n\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-3",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-3",
    "title": "Hands-on Ex 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#data-preparation",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#data-preparation",
    "title": "Hands-on Ex 5",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\nRows: 156 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Country, Region\ndbl (10): Happiness score, Whisker-high, Whisker-low, Dystopia, GDP per capi...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#plotting-static-parallel-coordinates-plot",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#plotting-static-parallel-coordinates-plot",
    "title": "Hands-on Ex 5",
    "section": "Plotting Static Parallel Coordinates Plot",
    "text": "Plotting Static Parallel Coordinates Plot\nCode chunk below shows a typical syntax used to plot a basic static parallel coordinates plot by using ggparcoord().\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\nPlotting a parallel coordinates with boxplot\nI will do a makeover the plot by using a collection of arguments provided by ggparcoord().\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\nWarning: The following aesthetics were dropped during statistical transformation: colour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\nParallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\nRotating x-axis text label\nTo make the x-axis text label easy to read, let us rotate the labels by 30 degrees. We can rotate axis text labels using theme() function in ggplot2 as shown in the code chunk below\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\nAdjusting the rotated x-axis text label\nRotating x-axis text labels to 30 degrees makes the label overlap with the plot and we can avoid this by adjusting the text location using hjust argument to theme’s text element with element_text(). We use axis.text.x as we want to change the look of x-axis text.\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#plotting-interactive-parallel-coordinates-plot-parallelplot-methods",
    "title": "Hands-on Ex 5",
    "section": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods",
    "text": "Plotting Interactive Parallel Coordinates Plot: parallelPlot methods\nThe code chunk below plot an interactive parallel coordinates plot by using parallelPlot().\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\nRotate axis label\nIn the code chunk below, rotateTitle argument is used to avoid overlapping axis labels.\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nChanging the colour scheme\nWe can change the default blue colour scheme by using continousCS argument as shown in the code chunk below.\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nParallel coordinates plot with histogram\nIn the code chunk below, histoVisibility argument is used to plot histogram along the axis of each variables.\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-4",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#installing-and-launching-r-packages-4",
    "title": "Hands-on Ex 5",
    "section": "Installing and Launching R Packages",
    "text": "Installing and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#data-wrangling",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#data-wrangling",
    "title": "Hands-on Ex 5",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nImporting the data set\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")\n\nRows: 23205 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (12): Project Name, Address, Type of Area, Nett Price($), Sale Date, Pro...\ndbl  (8): No. of Units, Area (sqm), Transacted Price ($), Unit Price ($ psm)...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nData Wrangling and Manipulation\n\n\nGrouped summaries without the Pipe\nThe code chunk below shows a more efficient way to tackle the same processes by using the pipe, %&gt;%:\n\n\nGrouped summaries with the pipe\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Project Name', 'Planning Region',\n'Planning Area', 'Property Type'. You can override using the `.groups`\nargument."
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#designing-treemap-with-treemap-package",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#designing-treemap-with-treemap-package",
    "title": "Hands-on Ex 5",
    "section": "Designing Treemap with treemap Package",
    "text": "Designing Treemap with treemap Package\n\nDesigning a static treemap\nFirst, we will select records belongs to resale condominium property type from realis2018_selected data frame.\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\n\nUsing the basic arguments\nThe code chunk below designed a treemap by using three core arguments of treemap(), namely: index, vSize and vColor.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nWorking with vColor and type arguments\nIn the code chunk below, type argument is define as value.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nColours in treemap package\n\n\nThe “value” type treemap\nThe code chunk below shows a value type treemap.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nThe “manual” type treemap\nThe code chunk below shows a manual type treemap.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nTreemap Layout\n\n\nWorking with algorithm argument\nThe code chunk below plots a squarified treemap by changing the algorithm argument.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\nUsing sortID\nWhen “pivotSize” algorithm is used, sortID argument can be used to dertemine the order in which the rectangles are placed from top left to bottom right.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#designing-treemap-using-treemapify-package",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#designing-treemap-using-treemapify-package",
    "title": "Hands-on Ex 5",
    "section": "Designing Treemap using treemapify Package",
    "text": "Designing Treemap using treemapify Package\n\nDesigning a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\nDefining hierarchy\nGroup by Planning Region\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\nGroup by Planning Area\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\nAdding boundary line\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#designing-interactive-treemap-using-d3treer",
    "href": "hands_on_ex/hands_on_ex05/hands_on_ex05.html#designing-interactive-treemap-using-d3treer",
    "title": "Hands-on Ex 5",
    "section": "Designing Interactive Treemap using d3treeR",
    "text": "Designing Interactive Treemap using d3treeR\n\nInstalling d3treeR package\n\ninstall.packages(\"devtools\")\n\n\nlibrary(devtools)\n\nLoading required package: usethis\n\ninstall_github(\"timelyportfolio/d3treeR\")\n\nSkipping install of 'd3treeR' from a github remote, the SHA1 (ebb833db) has not changed since last install.\n  Use `force = TRUE` to force installation\n\n\n\nlibrary(d3treeR)\n\n\n\nDesigning An Interactive Treemap\n\ntreemap() is used to build a treemap by using selected variables in condominium data.frame. The treemap created is save as object called tm.\n\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\nThen d3tree() is used to build an interactive treemap.\n\n\nd3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex06/hands_on_ex06.html",
    "href": "hands_on_ex/hands_on_ex06/hands_on_ex06.html",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "Note\n\n\n\nMake some changes to the figure size after guidance from Prof’s lesson 24 Feb 2024\n\n\n\n\n\n\n\n\nZhixuan’s personal learning outcomes:\n\n\n\n\nLearn good visualisation to plot with time series model!\n\n\n\n\n\nI can create the data visualisation by using R packages (hurray!):\n\nplotting a calender heatmap by using ggplot2 functions,\nplotting a cycle plot by using ggplot2 function,\nplotting a slopegraph\nplotting a horizon chart\n\n\n\n\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\n\n\n\n\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\nkable() can be used to review the structure of the imported data frame.\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\n\n\nStep 1: Deriving weekday and hour of day fields\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\nStep 1: Deriving attack by country object\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\n\n\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\narrivals_by_air.xlsx will be used now\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\n\nNext, two new fields called month and year are derived from Month-Year field.\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\n\n\nNext, the code chunk below is use to extract data for the target country (i.e. Vietnam)\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\n\n\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\n\nThe code chunk below is used to plot the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")\n\n\n\n\n\n\n\n\n\n\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\n\n\n\nNext, code chunk below will be used to plot a basic slopegraph as shown below.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Chai Zhixuan\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#learning-outcome",
    "href": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#learning-outcome",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "I can create the data visualisation by using R packages (hurray!):\n\nplotting a calender heatmap by using ggplot2 functions,\nplotting a cycle plot by using ggplot2 function,\nplotting a slopegraph\nplotting a horizon chart"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#installing-and-launching-r-packages",
    "href": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#installing-and-launching-r-packages",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#plotting-calendar-heatmap",
    "href": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#plotting-calendar-heatmap",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "attacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\nkable() can be used to review the structure of the imported data frame.\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\n\n\n\nStep 1: Deriving weekday and hour of day fields\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11\n\n\n\n\n\n\n\n\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\nStep 1: Deriving attack by country object\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\nStep 2: Preparing the tidy data frame\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\n\n\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#plotting-cycle-plot",
    "href": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#plotting-cycle-plot",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "arrivals_by_air.xlsx will be used now\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\n\nNext, two new fields called month and year are derived from Month-Year field.\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\n\n\nNext, the code chunk below is use to extract data for the target country (i.e. Vietnam)\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\n\n\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\n\nThe code chunk below is used to plot the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#plotting-slopegraph",
    "href": "hands_on_ex/hands_on_ex06/hands_on_ex06.html#plotting-slopegraph",
    "title": "Hands-on Ex 6",
    "section": "",
    "text": "rice &lt;- read_csv(\"data/rice.csv\")\n\n\n\n\nNext, code chunk below will be used to plot a basic slopegraph as shown below.\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Chai Zhixuan\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex07/hands_on_ex07.html",
    "href": "hands_on_ex/hands_on_ex07/hands_on_ex07.html",
    "title": "Hands-on Ex 7",
    "section": "",
    "text": "This hands-on exercise covers the following\n\nHands-on Exercise 7: Choropleth Mapping in R\nHands-on Exercise 7: Visualising Geospatial Point Data\nHands-on Exercise 7: Analytical Mapping.\n\n\n\n\n\n\n\nNote\n\n\n\nYes! Finally recap on geospatial!! 😊😊😊\nI need to refer to this linkwhich I did for geospatial\nOutcomes:\n\nRecap on geospatial analytics and use in project?"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Ex 7",
    "section": "Choropleth Mapping Geospatial Data Using tmap",
    "text": "Choropleth Mapping Geospatial Data Using tmap\n\nPlotting a choropleth map quickly by using qtm()\nTwo approaches can be used to prepare thematic map using tmap, they are:\n\nPlotting a thematic map quickly by using qtm().\nPlotting highly customisable thematic map by using tmap elements.\n\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\nCreating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\nDrawing a base map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\nDrawing a choropleth map using tm_polygons()\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\nDrawing a choropleth map using tm_fill() and *tm_border()**\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\nData classification methods of tmap\nThe code chunk below shows a quantile data classification that used 5 classes.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nPlotting choropleth map with custom break\nit is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nNow, we will plot the choropleth map by using the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nColour Scheme\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\nUsing ColourBrewer palette\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the choropleth map is shaded in green.\nTo reverse the colour shading, add a \"-\" prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\nMap Layouts\n\nMap Legend\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nMap style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\nCartographic Furniture\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\nDrawing Small Multiple Choropleth Maps\n\nBy assigning multiple values to at least one of the aesthetic arguments\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\nBy defining a group-by variable in tm_facets()\nIn this example, multiple small choropleth maps are created by using tm_facets().\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=FALSE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\nBy creating multiple stand-alone maps with tmap_arrange()\nIn this example, multiple small choropleth maps are created by creating multiple stand-alone maps with tmap_arrange().\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\nMappping Spatial Object Meeting a Selection Criterion\nI can use selection funtion to map spatial objects meeting the selection criterion.\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#geospatial-data-wrangling",
    "href": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#geospatial-data-wrangling",
    "title": "Hands-on Ex 7",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nData Import and Preparation\n\nsgpools &lt;- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\n\nlist(sgpools) \n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\n\n\nCreating a sf data frame from an aspatial data frame\nThe code chunk below converts sgpools data frame into a simple feature data frame by using st_as_sf() of sf packages\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\n\nlist(sgpools_sf)\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\n\n\nDrawing Proportional Symbol Map\nThe code churn below will turn on the interactive mode of tmap.\n\ntmap_mode(\"view\")\n\n\n\nIt all started with an interactive point symbol map\nThe code chunks below are used to create an interactive point symbol map.\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = 1,\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n\nLets make it proportional\nTo draw a proportional symbol map, we need to assign a numerical variable to the size visual attribute. The code chunks below show that the variable Gp1Gp2Winnings is assigned to size visual attribute.\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"red\",\n           size = \"Gp1Gp2 Winnings\",\n           border.col = \"black\",\n           border.lwd = 1)\n\n\n\n\n\n\n\n\nLets give it a different colour\nThe proportional symbol map can be further improved by using the colour visual attribute. In the code chunks below, OUTLET_TYPE variable is used as the colour attribute variable.\n\ntm_shape(sgpools_sf)+\ntm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1)\n\n\n\n\n\n\n\n\nI have a twin brothers :)\nAn impressive and little-know feature of tmap's view mode is that it also works with faceted plots. The argument sync in tm_facets() can be used in this case to produce multiple maps with synchronised zoom and pan settings.\n\ntm_shape(sgpools_sf) +\n  tm_bubbles(col = \"OUTLET TYPE\", \n          size = \"Gp1Gp2 Winnings\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#basic-choropleth-mapping",
    "href": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#basic-choropleth-mapping",
    "title": "Hands-on Ex 7",
    "section": "Basic Choropleth Mapping",
    "text": "Basic Choropleth Mapping\n\nVisualising distribution of non-functional water point\n\np1 &lt;- tm_shape(NGA_wp) +\n  tm_fill(\"wp_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of functional water point by LGAs\",\n            legend.outside = FALSE)\n\n\np2 &lt;- tm_shape(NGA_wp) +\n  tm_fill(\"total_wp\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\") +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Distribution of total  water point by LGAs\",\n            legend.outside = FALSE)\n\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#choropleth-map-for-rates",
    "href": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#choropleth-map-for-rates",
    "title": "Hands-on Ex 7",
    "section": "Choropleth Map for Rates",
    "text": "Choropleth Map for Rates\n\nDeriving Proportion of Functional Water Points and Non-Functional Water Points\nWe will tabulate the proportion of functional water points and the proportion of non-functional water points in each LGA. In the following code chunk, mutate() from dplyr package is used to derive two fields, namely pct_functional and pct_nonfunctional.\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\nPlotting map of rate\n\ntm_shape(NGA_wp) +\n  tm_fill(\"pct_functional\",\n          n = 10,\n          style = \"equal\",\n          palette = \"Blues\",\n          legend.hist = TRUE) +\n  tm_borders(lwd = 0.1,\n             alpha = 1) +\n  tm_layout(main.title = \"Rate map of functional water point by LGAs\",\n            legend.outside = TRUE)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#extreme-value-maps",
    "href": "hands_on_ex/hands_on_ex07/hands_on_ex07.html#extreme-value-maps",
    "title": "Hands-on Ex 7",
    "section": "Extreme Value Maps",
    "text": "Extreme Value Maps\n\nPercentile Map\nThe percentile map is a special type of quantile map with six specific categories: 0-1%,1-10%, 10-50%,50-90%,90-99%, and 99-100%. The corresponding breakpoints can be derived by means of the base R quantile command, passing an explicit vector of cumulative probabilities as c(0,.01,.1,.5,.9,.99,1). Note that the begin and endpoint need to be included.\n\nData Preparation\nStep 1: Exclude records with NA by using the code chunk below.\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\n\nStep 2: Creating customised classification and extracting values\n\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\nCreating the get.var function\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n\n\nA percentile mapping function\nNext, we will write a percentile mapping function by using the code chunk below.\n\npercentmap &lt;- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\n\n\nTest drive the percentile mapping function\nTo run the function, type the code chunk as shown below.\n\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\n\n\n\nBox map\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nDisplaying summary statistics on a choropleth map by using the basic principles of boxplot.\nTo create a box map, a custom breaks specification will be used. However, there is a complication. The break points for the box map vary depending on whether lower or upper outliers are present.\n\n\n\n\nCreating the boxbreaks function\nThe code chunk below is an R function that creating break points for a box map.\n\narguments:\n\nv: vector with observations\nmult: multiplier for IQR (default 1.5)\n\nreturns:\n\nbb: vector with 7 break points compute quartile and fences\n\n\n\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}\n\n\n\nCreating the get.var function\nThe code chunk below is an R function to extract a variable as a vector out of an sf data frame.\n\narguments:\n\nvname: variable name (as character, in quotes)\ndf: name of sf data frame\n\nreturns:\n\nv: vector with values (without a column name)\n\n\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n\n\nTest drive the newly created function\nLet's test the newly created function\n\nvar &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\nBoxmap function\nThe code chunk below is an R function to create a box map. - arguments: - vnam: variable name (as character, in quotes) - df: simple features polygon layer - legtitle: legend title - mtitle: map title - mult: multiplier for IQR - returns: - a tmap-element (plots a map)\n\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex08/hands_on_ex08.html",
    "href": "hands_on_ex/hands_on_ex08/hands_on_ex08.html",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "Zhixuan’s personal outcome\n\n\n\n\nAppreciate the visualisation with network data using R\nLink it to project and work\n\n\n\n\n\n4 network data modelling and visualisation packages will be installed and launched - igraph, tidygraph, ggraph and visNetwork. \nTidyverse and lubridate, an R package specially designed to handle and wrangling time data will be installed and launched too.\n\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts)\n\n\n\n\n\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\nNext, we will examine the structure of the data frame using glimpse() of dplyr.\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\nThe code chunk below will be used to perform the changes.\n\n\n\nTable below shows the data structure of the reformatted GAStech_edges data frame\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\n\n\nTable below shows the data structure of the reformatted GAStech_edges data frame\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\n\n\n\n\n\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\n\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\n\n\n\n\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\n\n\n\n\n\n\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\ntheme_graph() makes it easy to change the coloring of the plot.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n\n\n\n\nThe code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\nIn this section, you will colour each node by referring to their respective departments.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\nIn the code chunk below, the thickness of the edges will be mapped with the Weight variable.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nIn the code chunk below, facet_edges() is used. Before getting started, it is advisable for you to read it's reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\nThe code chunk below uses theme() to change the position of the legend.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\nThe code chunk below will be used to plot an interactive network graph by using the data prepared\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n\n\nIn the code chunk below, Fruchterman and Reingold layout is used.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\n\n\nThe code chunk below rename Department field to group.\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nIn the code run below visEdges() is used to symbolise the edges.\n- The argument arrows is used to define where to place the arrow.\n- The smooth argument is used to plot the edges using a smooth curve.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nIn the code chunk below, visOptions() is used to incorporate interactivity features in the data visualisation.\n\nThe argument highlightNearest highlights nearest when clicking a node.\nThe argument nodesIdSelection adds an id node selection creating an HTML select element.\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#creating-network-objects-using-tidygraph",
    "href": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#creating-network-objects-using-tidygraph",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "GAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\n\n\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\n\n\n\n\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#plotting-static-network-graphs-with-ggraph-package",
    "href": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#plotting-static-network-graphs-with-ggraph-package",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "ggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\ntheme_graph() makes it easy to change the coloring of the plot.\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n\n\n\n\nThe code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\nIn this section, you will colour each node by referring to their respective departments.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\nIn the code chunk below, the thickness of the edges will be mapped with the Weight variable.\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#creating-facet-graphs",
    "href": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#creating-facet-graphs",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "In the code chunk below, facet_edges() is used. Before getting started, it is advisable for you to read it's reference guide at least once.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\nThe code chunk below uses theme() to change the position of the legend.\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#network-metrics-analysis",
    "href": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#network-metrics-analysis",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "g &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#building-interactive-network-graph-with-visnetwork",
    "href": "hands_on_ex/hands_on_ex08/hands_on_ex08.html#building-interactive-network-graph-with-visnetwork",
    "title": "Hands-on Ex 8",
    "section": "",
    "text": "GAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\nThe code chunk below will be used to plot an interactive network graph by using the data prepared\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n\n\nIn the code chunk below, Fruchterman and Reingold layout is used.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\n\n\nThe code chunk below rename Department field to group.\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nIn the code run below visEdges() is used to symbolise the edges.\n- The argument arrows is used to define where to place the arrow.\n- The smooth argument is used to plot the edges using a smooth curve.\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\n\nIn the code chunk below, visOptions() is used to incorporate interactivity features in the data visualisation.\n\nThe argument highlightNearest highlights nearest when clicking a node.\nThe argument nodesIdSelection adds an id node selection creating an HTML select element.\n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex09/hands_on_ex09.html",
    "href": "hands_on_ex/hands_on_ex09/hands_on_ex09.html",
    "title": "Hands-on Ex 09",
    "section": "",
    "text": "Please note that during 9 Mar lesson, there was a change in the schedule:\n\nHands on Exercise 8 - Here\nHands on Exercise 9 - Here"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex10/hands_on_ex10.html",
    "href": "hands_on_ex/hands_on_ex10/hands_on_ex10.html",
    "title": "Hands-on Ex10",
    "section": "",
    "text": "Note\n\n\n\nFinally the last hands-on exercise😋\nOutcomes:\n\nCompare it with Tableau?\n\n\n\nThe following R packages will be used.\n\ntidyverse provides a collection of functions for performing data science task such as importing, tidying, wrangling data and visualising data. It is not a single package but a collection of modern R packages including but not limited to readr, tidyr, dplyr, ggplot, tibble, stringr, forcats and purrr.\nlubridate provides functions to work with dates and times more efficiently.\nggthemes is an extension of ggplot2. It provides additional themes beyond the basic themes of ggplot2.\ngtExtras provides some additional helper functions to assist in creating beautiful tables with gt, an R package specially designed for anyone to make wonderful-looking tables using the R programming language.\nreactable provides functions to create interactive data tables for R, based on the React Table library and made with reactR.\nreactablefmtr provides various features to streamline and enhance the styling of interactive reactable tables with easy-to-use and highly-customizable functions and themes.\n\n\npacman::p_load(lubridate, ggthemes, reactable,\nreactablefmtr, gt, gtExtras, tidyverse)\n\n\n\n\n\n\n\n\nIn the code chunk below, odbcConnectAccess() of RODBC package is used used to import a database query table into R.\n\n\n\n\n\n\nImportant\n\n\n\nBefore running the code chunk, you need to change the R system to 32bit version. This is because the odbcConnectAccess() is based on 32bit and not 64bit. However, I will not be changing to 32bit to prevent any system issue as I am doing the VAA project, Shiny.\nI will change to 32bit after the term ends. Below are screenshot from : link\n\n\n\nlibrary(rocbc)\ncon &lt;- odbcConnectAccess2007('data/Coffee Chain.mdb')\ncoffeechain &lt;- sqlFetch(con, 'CoffeeChain Query')\nwrite_rds(coffeechain, \"data/CoffeeChain.rds\")\nodbcClose(con)\n\n\n\n\n\ncoffeechain &lt;- read_rds(\"data/rds/CoffeeChain.rds\")\n\n\nproduct &lt;- coffeechain %&gt;%\n  group_by(`Product`) %&gt;%\n  summarise(`target` = sum(`Budget Sales`),\n            `current` = sum(`Sales`)) %&gt;%\n  ungroup()\n\n\n\n\n\nggplot(product, aes(Product, current)) + \n  geom_col(aes(Product, max(target) * 1.01),\n           fill=\"grey85\", width=0.85) +\n  geom_col(aes(Product, target * 0.75),\n           fill=\"grey60\", width=0.85) +\n  geom_col(aes(Product, target * 0.5),\n           fill=\"grey50\", width=0.85) +\n  geom_col(aes(Product, current), \n           width=0.35,\n           fill = \"black\") + \n  geom_errorbar(aes(y = target,\n                    x = Product, \n                    ymin = target,\n                    ymax= target), \n                width = .4,\n                colour = \"red\",\n                size = 1) +\n  coord_flip()\n\n\n\n\n\n\n\n\n\nsales_report &lt;- coffeechain %&gt;%\n  filter(Date &gt;= \"2013-01-01\") %&gt;%\n  mutate(Month = month(Date)) %&gt;%\n  group_by(Month, Product) %&gt;%\n  summarise(Sales = sum(Sales)) %&gt;%\n  ungroup() %&gt;%\n  select(Month, Product, Sales)\n\nThe code chunk below is used to compute the minimum, maximum and end othe the month sales.\n\nmins &lt;- group_by(sales_report, Product) %&gt;% \n  slice(which.min(Sales))\nmaxs &lt;- group_by(sales_report, Product) %&gt;% \n  slice(which.max(Sales))\nends &lt;- group_by(sales_report, Product) %&gt;% \n  filter(Month == max(Month))\n\nThe code chunk below is used to compute the 25 and 75 quantiles.\n\nquarts &lt;- sales_report %&gt;%\n  group_by(Product) %&gt;%\n  summarise(quart1 = quantile(Sales, \n                              0.25),\n            quart2 = quantile(Sales, \n                              0.75)) %&gt;%\n  right_join(sales_report)\n\n\n\n\n\nggplot(sales_report, aes(x=Month, y=Sales)) + \n  facet_grid(Product ~ ., scales = \"free_y\") + \n  geom_ribbon(data = quarts, aes(ymin = quart1, max = quart2), \n              fill = 'grey90') +\n  geom_line(size=0.3) +\n  geom_point(data = mins, col = 'red') +\n  geom_point(data = maxs, col = 'blue') +\n  geom_text(data = mins, aes(label = Sales), vjust = -1) +\n  geom_text(data = maxs, aes(label = Sales), vjust = 2.5) +\n  geom_text(data = ends, aes(label = Sales), hjust = 0, nudge_x = 0.5) +\n  geom_text(data = ends, aes(label = Product), hjust = 0, nudge_x = 1.0) +\n  expand_limits(x = max(sales_report$Month) + \n                  (0.25 * (max(sales_report$Month) - min(sales_report$Month)))) +\n  scale_x_continuous(breaks = seq(1, 12, 1)) +\n  scale_y_continuous(expand = c(0.1, 0)) +\n  theme_tufte(base_size = 3, base_family = \"Helvetica\") +\n  theme(axis.title=element_blank(), axis.text.y = element_blank(), \n        axis.ticks = element_blank(), strip.text = element_blank())\n\n\n\n\n\n\n\n\n\nproduct %&gt;%\n  gt::gt() %&gt;%\n  gt_plt_bullet(column = current, \n              target = target, \n              width = 60,\n              palette = c(\"lightblue\", \n                          \"black\")) %&gt;%\n  gt_theme_538()\n\n\n\n\n\n\n\nreport &lt;- coffeechain %&gt;%\n  mutate(Year = year(Date)) %&gt;%\n  filter(Year == \"2013\") %&gt;%\n  mutate (Month = month(Date, \n                        label = TRUE, \n                        abbr = TRUE)) %&gt;%\n  group_by(Product, Month) %&gt;%\n  summarise(Sales = sum(Sales)) %&gt;%\n  ungroup()\n\n\nreport %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\")\n\n\n\n\nreport %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\") %&gt;%\n   gt() %&gt;%\n   gt_plt_sparkline('Monthly Sales',\n                    same_limit = FALSE)\n\n\n\n\n\nreport %&gt;% \n  group_by(Product) %&gt;% \n  summarise(\"Min\" = min(Sales, na.rm = T),\n            \"Max\" = max(Sales, na.rm = T),\n            \"Average\" = mean(Sales, na.rm = T)\n            ) %&gt;%\n  gt() %&gt;%\n  fmt_number(columns = 4,\n    decimals = 2)\n\n\n\n\n\nspark &lt;- report %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\")\n\n\nsales &lt;- report %&gt;% \n  group_by(Product) %&gt;% \n  summarise(\"Min\" = min(Sales, na.rm = T),\n            \"Max\" = max(Sales, na.rm = T),\n            \"Average\" = mean(Sales, na.rm = T)\n            )\n\n\nsales_data = left_join(sales, spark)\n\n\n\n\n\nsales_data %&gt;%\n  gt() %&gt;%\n  gt_plt_sparkline('Monthly Sales',\n                   same_limit = FALSE)\n\n\n\n\n\n\nbullet &lt;- coffeechain %&gt;%\n  filter(Date &gt;= \"2013-01-01\") %&gt;%\n  group_by(`Product`) %&gt;%\n  summarise(`Target` = sum(`Budget Sales`),\n            `Actual` = sum(`Sales`)) %&gt;%\n  ungroup() \n\n\nsales_data = sales_data %&gt;%\n  left_join(bullet)\n\n\nsales_data %&gt;%\n  gt() %&gt;%\n  gt_plt_sparkline('Monthly Sales') %&gt;%\n  gt_plt_bullet(column = Actual, \n                target = Target, \n                width = 28,\n                palette = c(\"lightblue\", \n                          \"black\")) %&gt;%\n  gt_theme_538()\n\n\n\n\n\n\n\nremotes::install_github(\"timelyportfolio/dataui\")\n\n\nlibrary(dataui)\n\n\n\n\nreport &lt;- report %&gt;%\n  group_by(Product) %&gt;%\n  summarize(`Monthly Sales` = list(Sales))\n\n\nreactable(\n  report,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(report)\n    )\n  )\n)\n\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(report)\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(\n        report,\n        highlight_points = highlight_points(\n          min = \"red\", max = \"blue\"),\n        labels = c(\"first\", \"last\")\n        )\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(\n        report,\n        highlight_points = highlight_points(\n          min = \"red\", max = \"blue\"),\n        statline = \"mean\"\n        )\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(\n        report,\n        highlight_points = highlight_points(\n          min = \"red\", max = \"blue\"),\n        line_width = 1,\n        bandline = \"innerquartiles\",\n        bandline_color = \"green\"\n        )\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkbar(\n        report,\n        highlight_bars = highlight_bars(\n          min = \"red\", max = \"blue\"),\n        bandline = \"innerquartiles\",\n        statline = \"mean\")\n    )\n  )\n)\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWill revisit this after the poster presentation!!"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#importing-microsoft-access-database",
    "href": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#importing-microsoft-access-database",
    "title": "Hands-on Ex10",
    "section": "",
    "text": "In the code chunk below, odbcConnectAccess() of RODBC package is used used to import a database query table into R.\n\n\n\n\n\n\nImportant\n\n\n\nBefore running the code chunk, you need to change the R system to 32bit version. This is because the odbcConnectAccess() is based on 32bit and not 64bit. However, I will not be changing to 32bit to prevent any system issue as I am doing the VAA project, Shiny.\nI will change to 32bit after the term ends. Below are screenshot from : link\n\n\n\nlibrary(rocbc)\ncon &lt;- odbcConnectAccess2007('data/Coffee Chain.mdb')\ncoffeechain &lt;- sqlFetch(con, 'CoffeeChain Query')\nwrite_rds(coffeechain, \"data/CoffeeChain.rds\")\nodbcClose(con)\n\n\n\n\n\ncoffeechain &lt;- read_rds(\"data/rds/CoffeeChain.rds\")\n\n\nproduct &lt;- coffeechain %&gt;%\n  group_by(`Product`) %&gt;%\n  summarise(`target` = sum(`Budget Sales`),\n            `current` = sum(`Sales`)) %&gt;%\n  ungroup()\n\n\n\n\n\nggplot(product, aes(Product, current)) + \n  geom_col(aes(Product, max(target) * 1.01),\n           fill=\"grey85\", width=0.85) +\n  geom_col(aes(Product, target * 0.75),\n           fill=\"grey60\", width=0.85) +\n  geom_col(aes(Product, target * 0.5),\n           fill=\"grey50\", width=0.85) +\n  geom_col(aes(Product, current), \n           width=0.35,\n           fill = \"black\") + \n  geom_errorbar(aes(y = target,\n                    x = Product, \n                    ymin = target,\n                    ymax= target), \n                width = .4,\n                colour = \"red\",\n                size = 1) +\n  coord_flip()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#plotting-sparklines-using-ggplot2",
    "href": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#plotting-sparklines-using-ggplot2",
    "title": "Hands-on Ex10",
    "section": "",
    "text": "sales_report &lt;- coffeechain %&gt;%\n  filter(Date &gt;= \"2013-01-01\") %&gt;%\n  mutate(Month = month(Date)) %&gt;%\n  group_by(Month, Product) %&gt;%\n  summarise(Sales = sum(Sales)) %&gt;%\n  ungroup() %&gt;%\n  select(Month, Product, Sales)\n\nThe code chunk below is used to compute the minimum, maximum and end othe the month sales.\n\nmins &lt;- group_by(sales_report, Product) %&gt;% \n  slice(which.min(Sales))\nmaxs &lt;- group_by(sales_report, Product) %&gt;% \n  slice(which.max(Sales))\nends &lt;- group_by(sales_report, Product) %&gt;% \n  filter(Month == max(Month))\n\nThe code chunk below is used to compute the 25 and 75 quantiles.\n\nquarts &lt;- sales_report %&gt;%\n  group_by(Product) %&gt;%\n  summarise(quart1 = quantile(Sales, \n                              0.25),\n            quart2 = quantile(Sales, \n                              0.75)) %&gt;%\n  right_join(sales_report)\n\n\n\n\n\nggplot(sales_report, aes(x=Month, y=Sales)) + \n  facet_grid(Product ~ ., scales = \"free_y\") + \n  geom_ribbon(data = quarts, aes(ymin = quart1, max = quart2), \n              fill = 'grey90') +\n  geom_line(size=0.3) +\n  geom_point(data = mins, col = 'red') +\n  geom_point(data = maxs, col = 'blue') +\n  geom_text(data = mins, aes(label = Sales), vjust = -1) +\n  geom_text(data = maxs, aes(label = Sales), vjust = 2.5) +\n  geom_text(data = ends, aes(label = Sales), hjust = 0, nudge_x = 0.5) +\n  geom_text(data = ends, aes(label = Product), hjust = 0, nudge_x = 1.0) +\n  expand_limits(x = max(sales_report$Month) + \n                  (0.25 * (max(sales_report$Month) - min(sales_report$Month)))) +\n  scale_x_continuous(breaks = seq(1, 12, 1)) +\n  scale_y_continuous(expand = c(0.1, 0)) +\n  theme_tufte(base_size = 3, base_family = \"Helvetica\") +\n  theme(axis.title=element_blank(), axis.text.y = element_blank(), \n        axis.ticks = element_blank(), strip.text = element_blank())"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#static-information-dashboard-design-gt-and-gtextras-methods",
    "href": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#static-information-dashboard-design-gt-and-gtextras-methods",
    "title": "Hands-on Ex10",
    "section": "",
    "text": "product %&gt;%\n  gt::gt() %&gt;%\n  gt_plt_bullet(column = current, \n              target = target, \n              width = 60,\n              palette = c(\"lightblue\", \n                          \"black\")) %&gt;%\n  gt_theme_538()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#sparklines-gtextras-method",
    "href": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#sparklines-gtextras-method",
    "title": "Hands-on Ex10",
    "section": "",
    "text": "report &lt;- coffeechain %&gt;%\n  mutate(Year = year(Date)) %&gt;%\n  filter(Year == \"2013\") %&gt;%\n  mutate (Month = month(Date, \n                        label = TRUE, \n                        abbr = TRUE)) %&gt;%\n  group_by(Product, Month) %&gt;%\n  summarise(Sales = sum(Sales)) %&gt;%\n  ungroup()\n\n\nreport %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\")\n\n\n\n\nreport %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\") %&gt;%\n   gt() %&gt;%\n   gt_plt_sparkline('Monthly Sales',\n                    same_limit = FALSE)\n\n\n\n\n\nreport %&gt;% \n  group_by(Product) %&gt;% \n  summarise(\"Min\" = min(Sales, na.rm = T),\n            \"Max\" = max(Sales, na.rm = T),\n            \"Average\" = mean(Sales, na.rm = T)\n            ) %&gt;%\n  gt() %&gt;%\n  fmt_number(columns = 4,\n    decimals = 2)\n\n\n\n\n\nspark &lt;- report %&gt;%\n  group_by(Product) %&gt;%\n  summarize('Monthly Sales' = list(Sales), \n            .groups = \"drop\")\n\n\nsales &lt;- report %&gt;% \n  group_by(Product) %&gt;% \n  summarise(\"Min\" = min(Sales, na.rm = T),\n            \"Max\" = max(Sales, na.rm = T),\n            \"Average\" = mean(Sales, na.rm = T)\n            )\n\n\nsales_data = left_join(sales, spark)\n\n\n\n\n\nsales_data %&gt;%\n  gt() %&gt;%\n  gt_plt_sparkline('Monthly Sales',\n                   same_limit = FALSE)\n\n\n\n\n\n\nbullet &lt;- coffeechain %&gt;%\n  filter(Date &gt;= \"2013-01-01\") %&gt;%\n  group_by(`Product`) %&gt;%\n  summarise(`Target` = sum(`Budget Sales`),\n            `Actual` = sum(`Sales`)) %&gt;%\n  ungroup() \n\n\nsales_data = sales_data %&gt;%\n  left_join(bullet)\n\n\nsales_data %&gt;%\n  gt() %&gt;%\n  gt_plt_sparkline('Monthly Sales') %&gt;%\n  gt_plt_bullet(column = Actual, \n                target = Target, \n                width = 28,\n                palette = c(\"lightblue\", \n                          \"black\")) %&gt;%\n  gt_theme_538()"
  },
  {
    "objectID": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#interactive-information-dashboard-design-reactable-and-reactablefmtr-methods",
    "href": "hands_on_ex/hands_on_ex10/hands_on_ex10.html#interactive-information-dashboard-design-reactable-and-reactablefmtr-methods",
    "title": "Hands-on Ex10",
    "section": "",
    "text": "remotes::install_github(\"timelyportfolio/dataui\")\n\n\nlibrary(dataui)\n\n\n\n\nreport &lt;- report %&gt;%\n  group_by(Product) %&gt;%\n  summarize(`Monthly Sales` = list(Sales))\n\n\nreactable(\n  report,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(report)\n    )\n  )\n)\n\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(report)\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(\n        report,\n        highlight_points = highlight_points(\n          min = \"red\", max = \"blue\"),\n        labels = c(\"first\", \"last\")\n        )\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(\n        report,\n        highlight_points = highlight_points(\n          min = \"red\", max = \"blue\"),\n        statline = \"mean\"\n        )\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkline(\n        report,\n        highlight_points = highlight_points(\n          min = \"red\", max = \"blue\"),\n        line_width = 1,\n        bandline = \"innerquartiles\",\n        bandline_color = \"green\"\n        )\n    )\n  )\n)\n\n\n\n\n\n\nreactable(\n  report,\n  defaultPageSize = 13,\n  columns = list(\n    Product = colDef(maxWidth = 200),\n    `Monthly Sales` = colDef(\n      cell = react_sparkbar(\n        report,\n        highlight_bars = highlight_bars(\n          min = \"red\", max = \"blue\"),\n        bandline = \"innerquartiles\",\n        statline = \"mean\")\n    )\n  )\n)\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWill revisit this after the poster presentation!!"
  },
  {
    "objectID": "in_class_ex/in_class_ex01/in_class_ex01.html",
    "href": "in_class_ex/in_class_ex01/in_class_ex01.html",
    "title": "In-Class Ex 1: Now You See It",
    "section": "",
    "text": "Loading R packages\nIn this in-class exercise, two R packages will be used. They are:\n\ntidyverse\nhaven\n\n\npacman::p_load(tidyverse, haven)\n\n\n\nImporting PISA data\nThe code chunk below uses read_sas() of haven to import PISA data into R environment\n\nstu.qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nstu_qqq_SG &lt;- stu.qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\") \n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "in_class_ex/in_class_ex02/in_class_ex02.html",
    "href": "in_class_ex/in_class_ex02/in_class_ex02.html",
    "title": "In-Class Ex 2",
    "section": "",
    "text": "Please refer to the link for in class ex 2. This is done by Tableau 😀\n\nSample dashboard I found online 😱\nhttps://www.tableau.com/data-insights/dashboard-showcase/superstore\nhttps://www.tableau.com/solutions/gallery/superstore\nhttps://public.tableau.com/app/profile/pradeepkumar.g/viz/SampleSuperstore-SalesPerformance/viz_"
  },
  {
    "objectID": "in_class_ex/in_class_ex03/in_class_ex03.html",
    "href": "in_class_ex/in_class_ex03/in_class_ex03.html",
    "title": "In-Class Ex3",
    "section": "",
    "text": "Class Exercise\n\n\n\n\n\n\n\nNote\n\n\n\nPersonal Opinion - It is confusing and ugly\n\nConfusing pie chart\nNo numbers/No percentage (not easy to understand)\nColour is confusing - Colour scheme needs to be clearly differentiated (too many colours)\nUnclear/confusing labelling as it does not link to the pie chart\n2 layers of pie charts"
  },
  {
    "objectID": "in_class_ex/in_class_ex03/in_class_ex03.html#dashboard",
    "href": "in_class_ex/in_class_ex03/in_class_ex03.html#dashboard",
    "title": "In-Class Ex3",
    "section": "Dashboard",
    "text": "Dashboard\n\nhttps://public.tableau.com/app/profile/zhixuan.chai/viz/In_class_Exercise03-SuperstoreSalesandProfitReport/Dashboard1?publish=yes"
  },
  {
    "objectID": "in_class_ex/in_class_ex03/in_class_ex03.html#story",
    "href": "in_class_ex/in_class_ex03/in_class_ex03.html#story",
    "title": "In-Class Ex3",
    "section": "Story",
    "text": "Story\nhttps://public.tableau.com/app/profile/zhixuan.chai/viz/In_class_Exercise03-SuperstoreSalesandProfitStory/SuperstoreSalesandProfitStory?publish=yes"
  },
  {
    "objectID": "in_class_ex/in_class_ex04/in_class_ex04.html",
    "href": "in_class_ex/in_class_ex04/in_class_ex04.html",
    "title": "In-Class Ex 4",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse, ggdist, \n               ggridges, ggthemes,colorspace)"
  },
  {
    "objectID": "in_class_ex/in_class_ex04/in_class_ex04.html#original",
    "href": "in_class_ex/in_class_ex04/in_class_ex04.html#original",
    "title": "In-Class Ex 4",
    "section": "Original",
    "text": "Original\n\nggplot(exam_data, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "in_class_ex/in_class_ex04/in_class_ex04.html#attempt-1",
    "href": "in_class_ex/in_class_ex04/in_class_ex04.html#attempt-1",
    "title": "In-Class Ex 4",
    "section": "Attempt 1",
    "text": "Attempt 1\n\np &lt;- ggplot(exam_data, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\np &lt;- ggplotly(p)\n\np"
  },
  {
    "objectID": "in_class_ex/in_class_ex04/in_class_ex04.html#attempt-2",
    "href": "in_class_ex/in_class_ex04/in_class_ex04.html#attempt-2",
    "title": "In-Class Ex 4",
    "section": "Attempt 2",
    "text": "Attempt 2\n\np &lt;- ggplot(exam_data, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2, .width = 0, point_colour = NA) +\n  geom_boxplot(width = 0.20, outlier.shape = NA) +\n  geom_point_interactive(aes(tooltip = exam_data$tooltip,data_id = CLASS, size = 1.5)) +\n  coord_flip() +\n  theme_economist()\n\n# Plot\ngirafe(ggobj = p)"
  },
  {
    "objectID": "in_class_ex/in_class_ex06/in_class_ex06.html",
    "href": "in_class_ex/in_class_ex06/in_class_ex06.html",
    "title": "In-Class Ex 6",
    "section": "",
    "text": "Shiny App!\nhttps://chaizhixuan.shinyapps.io/prototype1/"
  },
  {
    "objectID": "in_class_ex/in_class_ex07/in_class_ex07.html",
    "href": "in_class_ex/in_class_ex07/in_class_ex07.html",
    "title": "In Class Ex 07 - Horizon Plot",
    "section": "",
    "text": "https://public.tableau.com/app/profile/zhixuan.chai/viz/in_class_exercise07/Dashboard1?publish=yes\nhttps://public.tableau.com/app/profile/zhixuan.chai/viz/in_class_ex07_part2/Sheet1?publish=yes\n\n\n\npacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n\n\n\n\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`))\n\n\n\n\n\naverp %&gt;% \n  filter(Date &gt;= \"2018-01-01\") %&gt;%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')"
  },
  {
    "objectID": "in_class_ex/in_class_ex07/in_class_ex07.html#getting-started",
    "href": "in_class_ex/in_class_ex07/in_class_ex07.html#getting-started",
    "title": "In Class Ex 07 - Horizon Plot",
    "section": "",
    "text": "pacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n\n\n\n\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`))\n\n\n\n\n\naverp %&gt;% \n  filter(Date &gt;= \"2018-01-01\") %&gt;%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')"
  },
  {
    "objectID": "in_class_ex/in_class_ex08/data/geospatial/MPSZ-2019.html",
    "href": "in_class_ex/in_class_ex08/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "in_class_ex/in_class_ex08/in_class_ex08.html#inverse-distance-weighted-idw",
    "href": "in_class_ex/in_class_ex08/in_class_ex08.html#inverse-distance-weighted-idw",
    "title": "In-Class Ex 08",
    "section": "Inverse Distance Weighted (IDW)",
    "text": "Inverse Distance Weighted (IDW)\n\nres &lt;- gstat(formula = MONTHSUM ~ 1, \n             locations = rfdata_sf, \n             nmax = 5,\n             set = list(idp = 0))\n\n\nresp &lt;- predict(res, coop)\n\n[inverse distance weighted interpolation]\n\n\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\n\npred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")"
  },
  {
    "objectID": "in_class_ex/in_class_ex08/in_class_ex08.html#kriging",
    "href": "in_class_ex/in_class_ex08/in_class_ex08.html#kriging",
    "title": "In-Class Ex 08",
    "section": "Kriging",
    "text": "Kriging\n\nv &lt;- variogram(MONTHSUM ~ 1, \n               data = rfdata_sf)\nplot(v)\n\n\n\n\n\nfv &lt;- fit.variogram(object = v,\n                    model = vgm(\n                      psill = 0.5, \n                      model = \"Sph\",\n                      range = 5000, \n                      nugget = 0.1))\nfv\n\n  model     psill    range\n1   Nug 0.1129190    0.000\n2   Sph 0.5292397 5213.396\n\n\n\nplot(v, fv)\n\n\n\n\n\nk &lt;- gstat(formula = MONTHSUM ~ 1, \n           data = rfdata_sf, \n           model = fv)\nk\n\ndata:\nvar1 : formula = MONTHSUM`~`1 ; data dim = 43 x 2\nvariograms:\n        model     psill    range\nvar1[1]   Nug 0.1129190    0.000\nvar1[2]   Sph 0.5292397 5213.396\n\n\n\nresp &lt;- predict(k, coop)\n\n[using ordinary kriging]\n\n\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\nresp$pred &lt;- resp$pred\nresp\n\nSimple feature collection with 314019 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 2692.528 ymin: 15773.73 xmax: 56371.45 ymax: 50231.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   var1.pred  var1.var                  geometry        x        y     pred\n1   131.0667 0.6608399 POINT (25883.42 50231.33) 25883.42 50231.33 131.0667\n2   130.9986 0.6610337  POINT (25933.4 50231.33) 25933.40 50231.33 130.9986\n3   130.9330 0.6612129 POINT (25983.38 50231.33) 25983.38 50231.33 130.9330\n4   130.8698 0.6613782 POINT (26033.36 50231.33) 26033.36 50231.33 130.8698\n5   130.8092 0.6615303 POINT (26083.34 50231.33) 26083.34 50231.33 130.8092\n6   130.7514 0.6616697 POINT (26133.32 50231.33) 26133.32 50231.33 130.7514\n7   130.6965 0.6617971  POINT (26183.3 50231.33) 26183.30 50231.33 130.6965\n8   130.6446 0.6619131 POINT (26233.28 50231.33) 26233.28 50231.33 130.6446\n9   130.5958 0.6620184 POINT (26283.26 50231.33) 26283.26 50231.33 130.5958\n10  132.5484 0.6542154 POINT (25033.76 50181.32) 25033.76 50181.32 132.5484\n\n\n\nkpred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\")\nkpred\n\nclass       : SpatRaster \ndimensions  : 690, 1075, 1  (nrow, ncol, nlyr)\nresolution  : 49.98037, 50.01103  (x, y)\nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncoord. ref. : SVY21 / Singapore TM (EPSG:3414) \nsource(s)   : memory\nname        :      last \nmin value   :  72.77826 \nmax value   : 195.53284 \n\n\n\nMapping the interpolated rainfall raster\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(kpred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\",\n            title = \"Total monthly rainfall (mm)\") +\n  tm_layout(main.title = \"Distribution of monthly rainfall, Feb 2024\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\n\n\n\n\n\nAutomatic variogram modelling\n\nv_auto &lt;- autofitVariogram(MONTHSUM ~ 1, \n                           rfdata_sf)\nplot(v_auto)\n\n\n\n\n\nv_auto\n\n$exp_var\n   np      dist     gamma dir.hor dir.ver   id\n1  15  1957.436  311.9613       0       0 var1\n2  33  3307.349  707.7685       0       0 var1\n3  54  4861.368  848.1314       0       0 var1\n4 116  6716.531  730.3969       0       0 var1\n5 111  9235.708 1006.5381       0       0 var1\n6 120 11730.199 1167.5988       0       0 var1\n7 135 14384.636 1533.5903       0       0 var1\n\n$var_model\n  model    psill   range kappa\n1   Nug     0.00       0   0.0\n2   Ste 24100.71 1647955   0.3\n\n$sserr\n[1] 0.2178294\n\nattr(,\"class\")\n[1] \"autofitVariogram\" \"list\"            \n\n\n\nk &lt;- gstat(formula = MONTHSUM ~ 1, \n           model = v_auto$var_model,\n           data = rfdata_sf)\nk\n\ndata:\nvar1 : formula = MONTHSUM`~`1 ; data dim = 43 x 2\nvariograms:\n        model    psill   range kappa\nvar1[1]   Nug     0.00       0   0.0\nvar1[2]   Ste 24100.71 1647955   0.3\n\n\n\nresp &lt;- predict(k, coop)\n\n[using ordinary kriging]\n\n\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\nresp$pred &lt;- resp$pred\n\nkpred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\")\n\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(kpred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\",\n            title = \"Total monthly rainfall (mm)\") +\n  tm_layout(main.title = \"Distribution of monthly rainfall, Feb 2024\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)"
  },
  {
    "objectID": "in_class_ex/in_class_ex09/in_class_ex09.html",
    "href": "in_class_ex/in_class_ex09/in_class_ex09.html",
    "title": "In Class Ex09",
    "section": "",
    "text": "Overview\nRecap of hands-on exercise 9 was done:\nhttps://czx-isss608.netlify.app/hands_on_ex/hands_on_ex08/hands_on_ex08\nFew things to take note:\nhttps://czx-isss608.netlify.app/hands_on_ex/hands_on_ex08/hands_on_ex08#fruchterman-and-reingold-layout\n\n\n\n\n\n\nNote\n\n\n\nCan be changed to kk, fr, nicely easily\nhttps://www.data-imaginist.com/posts/2017-02-06-ggraph-introduction-layouts/"
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Social capital is a crucial element in the educational landscape, intertwining with the functioning and success of schools. Defined as the networks, relationships, and social bonds that individuals and communities build, social capital plays a pivotal role in shaping the educational experiences of students. In the context of schools, it manifests through the connections between students, teachers, parents, and the wider community."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#objectives",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#objectives",
    "title": "Take-Home Exercise 1",
    "section": "2.1 Objectives",
    "text": "2.1 Objectives\nPISA is the OECD’s Programme for International Student Assessment. PISA measures 15-year-olds’ ability to use their reading, mathematics and science knowledge and skills to meet real-life challenges.\nInitial results of PISA 2022 were released on 5 December 2023. 81 countries and economies took part in PISA 2022.\nPISA 2022 shows that Singapore scored significantly higher than all other participating countries/economies in mathematics (575 points), reading (543 points) and science (561 points).\nIn this take-home exercise, I will demonstrate on how to deploy appropriate Exploratory Data Analysis (EDA) methods and ggplot2 functions to reveal:\n\nthe distribution of Singapore students’ performance in mathematics, reading, and science, and\nthe relationship between these performances with schools, gender and socioeconomic status of the students.\n\nA total of not more than 5 EDA will be created in this take-home exercise. This study will use the results from PISA 2022."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#the-study-area",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#the-study-area",
    "title": "Take-Home Exercise 1",
    "section": "2.2 The study area",
    "text": "2.2 The study area\nThis will be in the context of Singapore. Survey questions are found in this link."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#setting-the-analytical-tools",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#setting-the-analytical-tools",
    "title": "Take-Home Exercise 1",
    "section": "2.3 Setting the Analytical Tools",
    "text": "2.3 Setting the Analytical Tools\nI will use the following package:\n\nhaven: Import and Export ‘SPSS’, ‘Stata’ and ‘SAS’ Files\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figure created using ggplot2.\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, haven)"
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#summary-statistics",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#summary-statistics",
    "title": "Take-Home Exercise 1",
    "section": "3.1 Summary Statistics",
    "text": "3.1 Summary Statistics\nI will first have a look at the data structure\n\nstr(stu_qqq_SG)\n\ntibble [6,606 × 1,279] (S3: tbl_df/tbl/data.frame)\n $ CNT         : chr [1:6606] \"SGP\" \"SGP\" \"SGP\" \"SGP\" ...\n  ..- attr(*, \"label\")= chr \"Country code 3-character\"\n $ CNTRYID     : num [1:6606] 702 702 702 702 702 702 702 702 702 702 ...\n  ..- attr(*, \"label\")= chr \"Country Identifier\"\n $ CNTSCHID    : num [1:6606] 70200052 70200134 70200112 70200004 70200152 ...\n  ..- attr(*, \"label\")= chr \"Intl. School ID\"\n $ CNTSTUID    : num [1:6606] 70200001 70200002 70200003 70200004 70200005 ...\n  ..- attr(*, \"label\")= chr \"Intl. Student ID\"\n $ CYC         : chr [1:6606] \"08MS\" \"08MS\" \"08MS\" \"08MS\" ...\n  ..- attr(*, \"label\")= chr \"PISA Assessment Cycle (2 digits + 2 character Assessment type - MS/FT)\"\n $ NatCen      : chr [1:6606] \"070200\" \"070200\" \"070200\" \"070200\" ...\n  ..- attr(*, \"label\")= chr \"National Centre 6-digit Code\"\n $ STRATUM     : chr [1:6606] \"SGP01\" \"SGP01\" \"SGP01\" \"SGP01\" ...\n  ..- attr(*, \"label\")= chr \"Stratum ID 5-character (cnt + original stratum ID)\"\n $ SUBNATIO    : chr [1:6606] \"7020000\" \"7020000\" \"7020000\" \"7020000\" ...\n  ..- attr(*, \"label\")= chr \"Adjudicated sub-region code 7-digit code (3-digit country code + region ID + stratum ID)\"\n $ REGION      : num [1:6606] 70200 70200 70200 70200 70200 70200 70200 70200 70200 70200 ...\n  ..- attr(*, \"label\")= chr \"REGION\"\n $ OECD        : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"OECD country\"\n $ ADMINMODE   : num [1:6606] 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"Mode of Respondent\"\n $ LANGTEST_QQQ: num [1:6606] 313 313 313 313 313 313 313 313 313 313 ...\n  ..- attr(*, \"label\")= chr \"Language of Questionnaire\"\n $ LANGTEST_COG: num [1:6606] 313 313 313 313 313 313 313 313 313 313 ...\n  ..- attr(*, \"label\")= chr \"Language of Assessment\"\n $ LANGTEST_PAQ: num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Language of Parent Questionnaire\"\n $ Option_CT   : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Creative Thinking Option\"\n $ Option_FL   : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Financial Literacy Option\"\n $ Option_ICTQ : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"ICT Questionnaire Option\"\n $ Option_WBQ  : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Well-Being Questionnaire Option\"\n $ Option_PQ   : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Parent Questionnaire Option\"\n $ Option_TQ   : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Teacher Questionnaire Option\"\n $ Option_UH   : num [1:6606] 0 0 0 0 0 0 0 0 0 0 ...\n  ..- attr(*, \"label\")= chr \"Une Heure Option\"\n $ BOOKID      : num [1:6606] 4 45 8 40 42 15 13 39 14 7 ...\n  ..- attr(*, \"label\")= chr \"Form Identifier\"\n $ ST001D01T   : num [1:6606] 10 10 10 10 10 10 10 10 10 10 ...\n  ..- attr(*, \"label\")= chr \"Student International Grade (Derived)\"\n $ ST003D02T   : num [1:6606] 10 6 7 2 9 9 3 4 8 6 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Birth - Month\"\n $ ST003D03T   : num [1:6606] 2006 2006 2006 2006 2006 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Birth -Year\"\n $ ST004D01T   : num [1:6606] 1 2 2 2 1 1 2 2 1 2 ...\n  ..- attr(*, \"label\")= chr \"Student (Standardized) Gender\"\n $ ST250Q01JA  : num [1:6606] 2 1 1 2 2 2 1 1 2 2 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: A room of your own\"\n $ ST250Q02JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: A computer (laptop, desktop, or tablet) that you can use for school work\"\n $ ST250Q03JA  : num [1:6606] 1 1 2 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: Educational Software or Apps\"\n $ ST250Q04JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: Your own [cell phone] with Internet access (e.g. smartphone)\"\n $ ST250Q05JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your [home]: Internet access (e.g. Wi-fi) (excluding through smartphones)\"\n $ ST250D06JA  : chr [1:6606] \"7020002\" \"7020001\" \"7020001\" \"7020002\" ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your home? &lt;Country-specific item 1&gt;\"\n $ ST250D07JA  : chr [1:6606] \"7020002\" \"7020001\" \"7020002\" \"7020002\" ...\n  ..- attr(*, \"label\")= chr \"Which of the following are in your home? &lt;Country-specific item 2&gt;\"\n $ ST251Q01JA  : num [1:6606] 2 1 2 1 2 2 2 1 3 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Cars, vans, or trucks\"\n $ ST251Q02JA  : num [1:6606] 1 4 1 2 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Mopeds or motorcycles\"\n $ ST251Q03JA  : num [1:6606] 3 3 3 3 2 2 3 3 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Rooms with a bath or shower\"\n $ ST251Q04JA  : num [1:6606] 3 3 3 3 2 3 3 3 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Rooms with a [flush toilet]\"\n $ ST251Q06JA  : num [1:6606] 3 4 2 2 1 2 2 3 4 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Musical instruments (e.g. guitar, piano, [country-specific example])\"\n $ ST251Q07JA  : num [1:6606] 3 2 1 1 4 1 4 1 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your [home]: Works of art (e.g. paintings, sculptures, [country-specific example])\"\n $ ST251D08JA  : chr [1:6606] \"9999997\" \"9999997\" \"9999997\" \"9999997\" ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your home? &lt;Country-specific item 1&gt;\"\n $ ST251D09JA  : chr [1:6606] \"9999997\" \"9999997\" \"9999997\" \"9999997\" ...\n  ..- attr(*, \"label\")= chr \"How many of these items are there at your home? &lt;Country-specific item 2&gt;\"\n $ ST253Q01JA  : num [1:6606] 7 8 7 6 7 7 8 8 8 7 ...\n  ..- attr(*, \"label\")= chr \"How many [digital devices] with screens are there in your [home]?\"\n $ ST254Q01JA  : num [1:6606] 2 3 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Televisions\"\n $ ST254Q02JA  : num [1:6606] 1 2 2 1 3 2 2 5 2 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Desktop computers\"\n $ ST254Q03JA  : num [1:6606] 3 2 2 2 2 2 3 3 3 4 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Laptop computers or notebooks\"\n $ ST254Q04JA  : num [1:6606] 2 3 2 1 1 2 2 3 3 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: Tablets (e.g. [iPad®], [BlackBerry® Playbook™])\"\n $ ST254Q05JA  : num [1:6606] 1 5 1 1 NA 1 1 5 2 2 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: E-book readers (e.g. [Kindle™], [Kobo], [Bookeen])\"\n $ ST254Q06JA  : num [1:6606] 3 2 3 3 4 2 4 3 4 4 ...\n  ..- attr(*, \"label\")= chr \"How many of the following [digital devices] are in your [home]: [Cell phones] with Internet access (i.e. smartphones)\"\n $ ST255Q01JA  : num [1:6606] 7 4 4 3 2 2 4 5 7 4 ...\n  ..- attr(*, \"label\")= chr \"How many books are there in your [home]?\"\n $ ST256Q01JA  : num [1:6606] 2 4 5 2 4 1 1 3 4 4 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Religious books (e.g. [Bible], [Example 2])\"\n $ ST256Q02JA  : num [1:6606] 2 5 2 1 1 2 1 5 4 2 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Classical literature (e.g. [Shakespeare], [Example 2])\"\n $ ST256Q03JA  : num [1:6606] 4 5 2 1 1 2 2 5 5 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Contemporary literature\"\n $ ST256Q06JA  : num [1:6606] 4 3 3 2 2 5 2 4 4 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Books on science\"\n $ ST256Q07JA  : num [1:6606] 3 5 5 2 2 5 1 4 3 1 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Books on art, music, or design\"\n $ ST256Q08JA  : num [1:6606] 3 3 3 1 1 5 1 5 5 2 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: [Technical reference books]\"\n $ ST256Q09JA  : num [1:6606] 2 2 4 2 2 2 2 2 2 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Dictionaries\"\n $ ST256Q10JA  : num [1:6606] 4 4 5 2 4 1 4 4 4 3 ...\n  ..- attr(*, \"label\")= chr \"How many of these books at [home]: Books to help with your school work\"\n $ ST230Q01JA  : num [1:6606] 4 4 2 4 4 3 2 2 3 4 ...\n  ..- attr(*, \"label\")= chr \"How many siblings (including brothers, sisters, step-brothers, and step-sisters) do you have?\"\n $ ST005Q01JA  : num [1:6606] 2 2 2 2 2 2 2 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"What is the [highest level of schooling] completed by your mother?\"\n $ ST006Q01JA  : num [1:6606] 2 2 2 2 2 2 2 NA 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 8]\"\n $ ST006Q02JA  : num [1:6606] 2 2 2 2 2 2 2 1 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 7]\"\n $ ST006Q03JA  : num [1:6606] 1 2 2 2 2 2 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 6]\"\n $ ST006Q04JA  : num [1:6606] 2 1 2 2 1 1 2 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 5]\"\n $ ST006Q05JA  : num [1:6606] 1 1 2 1 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Does your mother have any of the following qualifications: [ISCED level 4]\"\n $ ST007Q01JA  : num [1:6606] 2 2 2 4 2 2 4 2 2 2 ...\n  ..- attr(*, \"label\")= chr \"What is the [highest level of schooling] completed by your father?\"\n $ ST008Q01JA  : num [1:6606] 2 2 2 NA 2 2 2 NA 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 8]\"\n $ ST008Q02JA  : num [1:6606] 2 2 2 NA 2 1 2 NA 2 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 7]\"\n $ ST008Q03JA  : num [1:6606] 2 2 2 NA 2 1 2 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 6]\"\n $ ST008Q04JA  : num [1:6606] 1 1 2 NA 1 1 2 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 5]\"\n $ ST008Q05JA  : num [1:6606] 2 1 2 1 2 1 2 1 1 2 ...\n  ..- attr(*, \"label\")= chr \"Does your father have any of the following qualifications: [ISCED level 4]\"\n $ ST258Q01JA  : num [1:6606] 1 1 1 5 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"In the past 30 days, how often did you not eat because there was not enough money to buy food?\"\n $ ST259Q01JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Now think about where you would place your family on this scale. Where would you say your family stands at this time?\"\n $ ST259Q02JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Now think about where you would place your family on this scale. Where do you think you will stand when you are 30?\"\n $ ST019AQ01T  : num [1:6606] 1 1 1 1 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"In what country were you and your parents born? You\"\n $ ST019BQ01T  : num [1:6606] 1 1 2 1 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"In what country were you and your parents born? Mother\"\n $ ST019CQ01T  : num [1:6606] 1 1 1 1 1 2 1 2 1 1 ...\n  ..- attr(*, \"label\")= chr \"In what country were you and your parents born? Father\"\n $ ST021Q01TA  : num [1:6606] NA NA NA NA NA 1 NA 1 NA NA ...\n  ..- attr(*, \"label\")= chr \"How old were you when you arrived in [country of test]?\"\n $ ST022Q01TA  : num [1:6606] 1 1 2 2 1 2 1 2 1 2 ...\n  ..- attr(*, \"label\")= chr \"What language do you speak at home most of the time?\"\n $ ST226Q01JA  : num [1:6606] 1 1 1 1 1 1 1 4 1 1 ...\n  ..- attr(*, \"label\")= chr \"How long have you been enrolled at this school?\"\n $ ST125Q01NA  : num [1:6606] 3 5 8 4 8 3 4 8 8 4 ...\n  ..- attr(*, \"label\")= chr \"How old were you when you started [ISCED 0]: Years\"\n $ ST126Q01TA  : num [1:6606] 4 5 5 5 5 5 5 5 4 5 ...\n  ..- attr(*, \"label\")= chr \"How old were you when you started [ISCED 1]: Years\"\n $ ST127Q01TA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever repeated a [grade]: At [ISCED 1]\"\n $ ST127Q02TA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever repeated a [grade]: At [ISCED 2]\"\n $ ST127Q03TA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever repeated a [grade]: At [ISCED 3]\"\n $ ST260Q01JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever missed school for more than three months in a row: At [ISCED 1]\"\n $ ST260Q02JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever missed school for more than three months in a row: At [ISCED 2]\"\n $ ST260Q03JA  : num [1:6606] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"Have you ever missed school for more than three months in a row: At [ISCED 3]\"\n $ ST261Q01JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was bored.\"\n $ ST261Q02JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was suspended for something (e.g. violence, aggression, use of drugs, drug dealing).\"\n $ ST261Q03JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was pregnant.\"\n $ ST261Q04JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I could not reach school because of transportation problems.\"\n $ ST261Q05JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I had to take care of a family member.\"\n $ ST261Q06JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I had to help with work at home, the family business, or on the family land.\"\n $ ST261Q07JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I had to get work to bring money home.\"\n $ ST261Q08JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I was sick.\"\n $ ST261Q09JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I did not feel safe at school.\"\n $ ST261Q10JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: I could not pay [school fees].\"\n $ ST261Q11JA  : num [1:6606] NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"label\")= chr \"Why miss school for 3+ months: School was closed because of a natural disaster (e.g. flood, earthquake).\"\n $ ST062Q01TA  : num [1:6606] 1 1 1 1 2 1 1 1 1 1 ...\n  ..- attr(*, \"label\")= chr \"In the last two full weeks of school, how often: I [skipped] a whole school day\"\n  [list output truncated]\n\n\nThere are are total of 6606 rows and 1279 columns.\nFurther filter of data is needed."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#extracting-the-study-data",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#extracting-the-study-data",
    "title": "Take-Home Exercise 1",
    "section": "3.2 Extracting the study data",
    "text": "3.2 Extracting the study data\nI will extract the following:\n\nGender: ST004D01T\n\nSocioeconomic Status: ESCS\n\nSchool: I will use Expected Education Level as the school. The reason is that in the PISA data, it is not meaningful to use the current school level (most of age 15 years old) and no information on the school name: EXPECEDU\n\nMath score - PV1MATH to PV10MATH\nScience score - PV1SCIE to PV10SCIE\nReading score - PV1READ to PV10READ\n\n\nstu_qqq_SG_1 &lt;- stu_qqq_SG %&gt;%\nselect(ST004D01T,EXPECEDU, PV1MATH, PV2MATH,PV3MATH,PV4MATH,PV5MATH,PV6MATH,PV7MATH ,PV8MATH,PV9MATH,PV10MATH,PV1SCIE,PV2SCIE,PV3SCIE,PV4SCIE,PV5SCIE,PV6SCIE,PV7SCIE,PV8SCIE,PV9SCIE,PV10SCIE,PV1READ,PV2READ,PV3READ,PV4READ,PV5READ,PV6READ,PV7READ,PV8READ,PV9READ,PV10READ,ESCS)\n\nI will save the data to rds format as well:\n\nwrite_rds(stu_qqq_SG_1,\n          \"data/stu_qqq_SG_1.rds\")\n\nI will read back the rds file.\n\nstu_qqq_SG_1 &lt;- read_rds(\"data/stu_qqq_SG_1.rds\")\n\n\nglimpse(stu_qqq_SG_1)\n\nRows: 6,606\nColumns: 33\n$ ST004D01T &lt;dbl&gt; 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, …\n$ EXPECEDU  &lt;dbl&gt; 7, 7, 6, NA, 6, 7, 9, 9, 7, 6, 7, 8, 9, 9, 9, 9, 7, 7, 7, 7,…\n$ PV1MATH   &lt;dbl&gt; 639.004, 697.191, 693.710, 427.317, 436.462, 569.982, 771.62…\n$ PV2MATH   &lt;dbl&gt; 601.251, 754.277, 654.450, 410.376, 453.450, 539.609, 672.81…\n$ PV3MATH   &lt;dbl&gt; 621.480, 671.940, 696.938, 423.586, 392.315, 531.648, 653.74…\n$ PV4MATH   &lt;dbl&gt; 631.596, 657.300, 646.187, 388.935, 439.986, 534.368, 734.81…\n$ PV5MATH   &lt;dbl&gt; 579.276, 621.126, 678.119, 330.962, 443.125, 465.815, 727.52…\n$ PV6MATH   &lt;dbl&gt; 591.791, 655.729, 644.019, 379.988, 452.648, 528.509, 729.83…\n$ PV7MATH   &lt;dbl&gt; 600.709, 747.934, 720.531, 398.535, 396.970, 514.326, 597.22…\n$ PV8MATH   &lt;dbl&gt; 587.322, 694.365, 671.425, 422.127, 459.945, 521.029, 772.27…\n$ PV9MATH   &lt;dbl&gt; 618.131, 742.732, 694.085, 375.354, 438.166, 472.382, 694.39…\n$ PV10MATH  &lt;dbl&gt; 581.973, 656.934, 668.304, 453.348, 448.084, 503.387, 725.29…\n$ PV1SCIE   &lt;dbl&gt; 710.634, 670.646, 666.095, 340.308, 456.333, 475.158, 693.80…\n$ PV2SCIE   &lt;dbl&gt; 618.739, 748.839, 604.771, 329.889, 453.400, 470.030, 626.98…\n$ PV3SCIE   &lt;dbl&gt; 591.623, 635.443, 704.217, 411.353, 498.937, 461.218, 627.38…\n$ PV4SCIE   &lt;dbl&gt; 659.770, 639.735, 687.659, 327.974, 532.324, 504.199, 676.79…\n$ PV5SCIE   &lt;dbl&gt; 635.892, 608.385, 690.974, 292.183, 508.231, 486.930, 661.84…\n$ PV6SCIE   &lt;dbl&gt; 646.901, 670.662, 617.175, 355.423, 504.461, 493.011, 618.39…\n$ PV7SCIE   &lt;dbl&gt; 603.569, 734.807, 692.886, 400.182, 404.572, 469.950, 602.07…\n$ PV8SCIE   &lt;dbl&gt; 621.352, 639.748, 630.900, 317.518, 549.457, 464.012, 653.97…\n$ PV9SCIE   &lt;dbl&gt; 659.674, 716.768, 656.620, 298.893, 411.062, 440.113, 645.47…\n$ PV10SCIE  &lt;dbl&gt; 649.719, 655.670, 649.087, 362.702, 473.613, 495.410, 662.55…\n$ PV1READ   &lt;dbl&gt; 676.298, 625.585, 620.116, 381.495, 448.199, 469.441, 744.53…\n$ PV2READ   &lt;dbl&gt; 692.247, 686.716, 559.078, 400.815, 560.636, 500.350, 679.85…\n$ PV3READ   &lt;dbl&gt; 690.981, 663.147, 554.767, 374.911, 365.478, 375.703, 635.12…\n$ PV4READ   &lt;dbl&gt; 643.067, 567.435, 587.026, 367.484, 469.970, 377.452, 725.55…\n$ PV5READ   &lt;dbl&gt; 627.908, 614.500, 591.806, 336.009, 503.664, 470.781, 731.16…\n$ PV6READ   &lt;dbl&gt; 684.676, 604.745, 570.547, 324.630, 481.215, 415.448, 684.68…\n$ PV7READ   &lt;dbl&gt; 661.380, 669.375, 599.078, 396.242, 436.800, 448.547, 646.02…\n$ PV8READ   &lt;dbl&gt; 674.070, 623.735, 545.610, 374.723, 531.226, 434.381, 756.80…\n$ PV9READ   &lt;dbl&gt; 666.282, 649.579, 610.466, 314.704, 480.997, 411.703, 653.76…\n$ PV10READ  &lt;dbl&gt; 657.387, 571.261, 590.758, 342.956, 478.578, 410.846, 784.71…\n$ ESCS      &lt;dbl&gt; 0.1836, 0.8261, -1.0357, -0.9606, 0.0856, 0.1268, -0.0154, 1…"
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#average-of-plausible-values-from-subjects",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#average-of-plausible-values-from-subjects",
    "title": "Take-Home Exercise 1",
    "section": "4.1 Average of plausible values from subjects",
    "text": "4.1 Average of plausible values from subjects\n10 different values are given for the different subjects. I will need to find the average of plausible values.\n\n4.1.1 Math\n\nstu_qqq_SG_1 &lt;- stu_qqq_SG_1 %&gt;%\n  mutate(math_average = rowMeans(across(c(PV1MATH, PV2MATH, PV3MATH,PV4MATH,PV5MATH,PV6MATH,PV7MATH,PV8MATH,PV9MATH,PV10MATH))))\n\n\n\n4.1.2 Science\n\nstu_qqq_SG_1 &lt;- stu_qqq_SG_1 %&gt;%\n  mutate(sci_average = rowMeans(across(c(PV1SCIE, PV2SCIE, PV3SCIE,PV4SCIE,PV5SCIE,PV6SCIE,PV7SCIE,PV8SCIE,PV9SCIE,PV10SCIE))))\n\n\n\n4.1.3 Reading\n\nstu_qqq_SG_1 &lt;- stu_qqq_SG_1 %&gt;%\n  mutate(read_average = rowMeans(across(c(PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, PV6READ, PV7READ, PV8READ, PV9READ, PV10READ))))"
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#rename-of-column-headings",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#rename-of-column-headings",
    "title": "Take-Home Exercise 1",
    "section": "4.2 Rename of column headings",
    "text": "4.2 Rename of column headings\nI will rename some column for better reference\n\nstu_qqq_SG_1 &lt;- stu_qqq_SG_1 %&gt;%\n  rename(gender = ST004D01T, socioeconomic_status = ESCS, school = EXPECEDU)\n\nI will now filter to the columns I want\n\nstu_qqq_SG_2 &lt;- stu_qqq_SG_1 %&gt;%\nselect(gender, socioeconomic_status , school , math_average, sci_average, read_average)\n\nI will save it do rds format as well\n\nwrite_rds(stu_qqq_SG_2,\n          \"data/stu_qqq_SG_2.rds\")\n\nI will import back the rds file\n\nstu_qqq_SG_2 &lt;- read_rds(\"data/stu_qqq_SG_2.rds\")\n\n\nglimpse(stu_qqq_SG_2)\n\nRows: 6,606\nColumns: 6\n$ gender               &lt;dbl&gt; 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1…\n$ socioeconomic_status &lt;dbl&gt; 0.1836, 0.8261, -1.0357, -0.9606, 0.0856, 0.1268,…\n$ school               &lt;dbl&gt; 7, 7, 6, NA, 6, 7, 9, 9, 7, 6, 7, 8, 9, 9, 9, 9, …\n$ math_average         &lt;dbl&gt; 605.2533, 689.9528, 676.7768, 401.0528, 436.1151,…\n$ sci_average          &lt;dbl&gt; 639.7873, 672.0703, 660.0384, 343.6425, 479.2390,…\n$ read_average         &lt;dbl&gt; 667.4296, 627.6078, 582.9252, 361.3969, 475.6763,…"
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#recode-column-information",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#recode-column-information",
    "title": "Take-Home Exercise 1",
    "section": "4.3 Recode column information",
    "text": "4.3 Recode column information\nA closer look at the expected education reveals some confusion.\n\nFrom the link, I would need to map to the correct education level in Singapore\n\n\n\n\nISCED\nSingapore\n\n\n\n\n2\nLower Secondary\n\n\n3\nUpper Secondary\n\n\n5\nPost Secondary\n\n\n6\nDiploma\n\n\n7\nBachelor’s Degree\n\n\n8\nMaster’s Degree\n\n\n9\nPhD\n\n\n\nNow, I will recode the column information\nFor gender:\n\nstu_qqq_SG_3 &lt;- stu_qqq_SG_2 %&gt;%\n  mutate(gender = case_when(\n    gender == \"1\" ~ \"Female\",\n    gender == \"2\" ~ \"Male\"))\n\n\nsummary(stu_qqq_SG_3)\n\n    gender          socioeconomic_status     school       math_average  \n Length:6606        Min.   :-3.5488      Min.   :2.000   Min.   :262.6  \n Class :character   1st Qu.:-0.2327      1st Qu.:6.000   1st Qu.:506.2  \n Mode  :character   Median : 0.4817      Median :7.000   Median :582.4  \n                    Mean   : 0.2904      Mean   :7.006   Mean   :574.0  \n                    3rd Qu.: 0.9036      3rd Qu.:8.000   3rd Qu.:648.4  \n                    Max.   : 3.2780      Max.   :9.000   Max.   :842.7  \n                    NA's   :47           NA's   :209                    \n  sci_average     read_average  \n Min.   :242.0   Min.   :158.6  \n 1st Qu.:498.9   1st Qu.:477.4  \n Median :571.2   Median :553.6  \n Mean   :561.0   Mean   :542.5  \n 3rd Qu.:629.3   3rd Qu.:616.1  \n Max.   :801.9   Max.   :797.6  \n                                \n\n\nFor expected education\n\nstu_qqq_SG_3 &lt;- stu_qqq_SG_3 %&gt;%\n  mutate(school = case_when(\n    school == \"2\" ~ \"Lower Sec\",\n    school == \"3\" ~ \"Upper Sec\",\n    school == \"5\" ~ \"Post Sec\",\n    school == \"6\" ~ \"Diploma\",\n    school == \"7\" ~ \"Degree\",\n    school == \"8\" ~ \"Masters\",\n    school == \"9\" ~ \"PhD\"\n  ))\n\nI will save the file to rds\n\nwrite_rds(stu_qqq_SG_3,\n          \"data/stu_qqq_SG_3.rds\")\n\nI will import back the rds file\n\nstu_qqq_SG_3 &lt;- read_rds(\"data/stu_qqq_SG_3.rds\")"
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#histograms---subjects",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#histograms---subjects",
    "title": "Take-Home Exercise 1",
    "section": "5.1 Histograms - Subjects",
    "text": "5.1 Histograms - Subjects\nNow I will plot the individual histograms for each subjects with the counts. After which, I will combine the histograms together to do a comparison across the subjects.\nMath\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=stu_qqq_SG_3, \n             aes(x = math_average)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"darkblue\",      \n                 fill=\"light blue\") + \n  coord_cartesian(xlim=c(0,900)) +\n  ggtitle(\"Histogram of Maths scores\")+\n  labs(x = \"Math Score\")+\n  labs(y= \"Number of students\")\n\n\n\n\nReading\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=stu_qqq_SG_3, \n             aes(x = read_average)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"darkblue\",      \n                 fill=\"light blue\") + \n  coord_cartesian(xlim=c(0,900)) +\n  ggtitle(\"Histogram of Reading scores\")+\n  labs(x = \"Reading Score\")+\n  labs(y= \"Number of students\")\n\n\n\n\nScience\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=stu_qqq_SG_3, \n             aes(x = sci_average)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"darkblue\",      \n                 fill=\"light blue\") + \n  coord_cartesian(xlim=c(0,900)) +\n  ggtitle(\"Histogram of Science scores\")+\n  labs(x = \"Math Score\")+\n  labs(y= \"Number of students\")\n\n\n\n\nLet me put all the plots together to compare now:\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n(p1 / p2 / p3)\n\n\n\n\n\n\n\n\n\n\nFindings\n\n\n\nComparing the 3 histograms, Math score is comparatively better as compared to Science and Reading score. Math score has an mean of 574, while Science has mean of 561 and Reading has a mean of 542.5.\nIn addition, Math score seems to be symmetrically normally distributed. Science and Reading score seems to be left skewed normally distributed."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#boxplot---gender-and-subjects",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#boxplot---gender-and-subjects",
    "title": "Take-Home Exercise 1",
    "section": "5.2 Boxplot - Gender and Subjects",
    "text": "5.2 Boxplot - Gender and Subjects\nNow I will compare each subjects by the genders:\n\nMathReadingScience\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(y = math_average,x= gender)) +    \n  geom_boxplot()+\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4) +\n  ggtitle(\"Boxplot of Math Score (by Gender)\")+\n  labs(y = \"Math Score\")\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(y = read_average,       \n           x= gender)) +    \n  geom_boxplot()+\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4) +\n  ggtitle(\"Boxplot of Reading Score (by Gender)\")+\n  labs(y = \"Reading Score\")\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(y = sci_average,       \n           x= gender)) +    \n  geom_boxplot()+\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4) +\n  ggtitle(\"Boxplot of Science Score (by Gender)\")+\n  labs(y = \"Science Score\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nFindings\n\n\n\nFrom the boxplots above, Male’s math score has a higher middle and mean as compared to Female’s math score, However, Male’s math score has a lower minimum value as compared to Female’s math score.\nFrom the boxplots above, Male’s reading score has a lower middle and mean as compared to Female’s reading score. In addition, Male’s reading score has a lower minimum value as compared to Female’s reading score.\nFrom the boxplots above, Male’s science score has a slightly higher middle and mean as compared to Female’s science score, However, Male’s science score has a lower minimum value as compared to Female’s science score."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#bar-graph---expected-education-and-subjects",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#bar-graph---expected-education-and-subjects",
    "title": "Take-Home Exercise 1",
    "section": "5.3 Bar graph - Expected Education and Subjects",
    "text": "5.3 Bar graph - Expected Education and Subjects\n\nMathReadingScience\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(x= math_average, \n           fill = school)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")+\n  ggtitle(\"Distribution of Maths scores (by Expected School)\")+\n  labs(x = \"Math Score\")+\n  labs(y= \"Number of students\")\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(x= read_average, \n           fill = school)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")+\n  ggtitle(\"Distribution of Reading scores (by Expected School)\")+\n  labs(x = \"Reading Score\")+\n  labs(y= \"Number of students\")\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(x= sci_average, \n           fill = school)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")+\n  ggtitle(\"Distribution of Science scores (by Expected School)\")+\n  labs(x = \"Science Score\")+\n  labs(y= \"Number of students\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nFindings\n\n\n\nIn all the histogram plots, all subjects show that the expected education chosen by students is mainly degree, followed by masters/diploma. This is no surprisingly as due to higher number of singapore residents aged 25 years and above having diploma/degree: link. Students who are taking PISA has expectation of going to a university with the current scores they obtained from the various subjects."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#kernel-density-estimate-plot-gender-and-socioeconomic-status",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#kernel-density-estimate-plot-gender-and-socioeconomic-status",
    "title": "Take-Home Exercise 1",
    "section": "5.4 Kernel density estimate plot (Gender and Socioeconomic Status)",
    "text": "5.4 Kernel density estimate plot (Gender and Socioeconomic Status)\nI will examine the relationship between gender and socioeconomic status.\n\nggplot(data=stu_qqq_SG_3, \n       aes(x = socioeconomic_status, \n           colour = gender)) +\n  geom_density()+\n  ggtitle(\"Distribution of Socioeconomic Status (by Gender)\")+\n  labs(x = \"Socioeconomic Status - PISA Index\")\n\n\n\n\n\n\n\n\n\n\nFindings\n\n\n\nThe density curve for both gender seems to be left-skewed, this suggests that the mean of the socioecomomic status index is less than the median of the socioeconomic status index.\nFemale students has a higher socioeconomic status as compared to male students with the peak more to the right compared to male students. However, male students’ socioeconomic status has a higher peak compared to female students."
  },
  {
    "objectID": "take_home_ex/take_home_ex01/take_home_ex01.html#scatterplot-socioeconomic-status-and-subjects-score",
    "href": "take_home_ex/take_home_ex01/take_home_ex01.html#scatterplot-socioeconomic-status-and-subjects-score",
    "title": "Take-Home Exercise 1",
    "section": "5.5 Scatterplot (Socioeconomic Status and Subjects Score)",
    "text": "5.5 Scatterplot (Socioeconomic Status and Subjects Score)\nI will further examine a potential socioeconomic status with the various subjects score\n\nMathReadingScience\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(x= math_average, \n           y= socioeconomic_status)) +\n  geom_point()+\n  ggtitle(\"Socioeconomic Status - PISA Index and Maths scores\") +\n  labs(x = \"Math Score\")+\n  labs(y = \"Socioeconomic Status - PISA Index\")\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(x= read_average, \n           y= socioeconomic_status)) +\n  geom_point()+\n  ggtitle(\"Socioeconomic Status - PISA Index and Reading scores\") +\n  labs(x = \"Reading Score\")+\n  labs(y = \"Socioeconomic Status - PISA Index\")\n\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_3, \n       aes(x= sci_average, \n           y= socioeconomic_status)) +\n  geom_point()+\n  ggtitle(\"Socioeconomic Status - PISA Index and Science scores\") +\n  labs(x = \"Science Score\")+\n  labs(y = \"Socioeconomic Status - PISA Index\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nFindings\n\n\n\nBased on all the scatterplots, It seems to suggest that there is no relationship between the subjects and socioeconomic status as the points seems to be randomly scattered. Further tests are needed to examine this."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html",
    "title": "Take-Home Exercise 2",
    "section": "",
    "text": "In this take-home exercise, I will continue my visual analytics journey by selecting one of my classmate Take-Home Exercise 1 and critic the submission in terms of clarity and aesthetics."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#original-design",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#original-design",
    "title": "Take-Home Exercise 2",
    "section": "4.1 Original Design",
    "text": "4.1 Original Design\nThe original design is shown below:\n\nHistogram serves the purpose of displaying the distribution of the count of students in each subject."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#clarity",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#clarity",
    "title": "Take-Home Exercise 2",
    "section": "4.2 Clarity",
    "text": "4.2 Clarity\n\n4.2.1 Graph Title\nInteresting insight from the graph can be put as a main title. The graph title can be interesting to grab the attention of readers.\n\n\n4.2.2 Axes Labelling\nAxes labels must be meaningful to ensure readers are aware of what the axes represents. Names such as count is vague and can be improved to be more specific.\n\n\n4.2.3 Adding of Mean\nMean or Median can be included to provide audience with a better interpretation of the distribution among the subjects. This can also be compared among the different subjects."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#aesthetics",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#aesthetics",
    "title": "Take-Home Exercise 2",
    "section": "4.3 Aesthetics",
    "text": "4.3 Aesthetics\n\n4.3.1 Colour\nHistogram can be of different colour as compared to the background. Grey Background can be improved to give a more clean and professional look.\n\n\n4.3.2 Title and Axes Label\nIn addition, the orientation of the histograms can be changed to ensure the title is readable. The rotation of y-axis label should be changed to ensure readability as well. Spelling of the y and x axis label can be adjusted accordingly to a give a more formal formatting (e.g. first letter of each word is capitalised while the rest is not)"
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#proposed-sketch",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#proposed-sketch",
    "title": "Take-Home Exercise 2",
    "section": "4.4 Proposed sketch",
    "text": "4.4 Proposed sketch"
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#final-design",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#final-design",
    "title": "Take-Home Exercise 2",
    "section": "4.5 Final Design",
    "text": "4.5 Final Design\n\nMathReadingScience\n\n\n\np1 &lt;- ggplot(data=stu_qqq_SG_MRS, \n             aes(x = AVEMATH )) +\n  # plot histogram\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"#666666\",\n                 fill=\"light blue\") +\n  # add mean math score line\n  geom_vline(aes(xintercept = mean(AVEMATH)),\n             linetype= 'dashed',\n             size= .4,\n             color= '#0e2f44') +\n  # annotation for mean math score line \n  geom_text(aes(mean(AVEMATH), 65, \n                label= 'Mean of Math Score',\n                hjust= 1, vjust= -25),\n            check_overlap = T,\n            color= '#0e2f44') +\n  labs(y= 'No. of\\nStudents', x= 'Math Score from PISA',\n       title = \"Distribution of Students' Math Score from PISA 2022 Results\",\n       subtitle= 'Singapore Students aged 15 in 2022',\n       caption = \"Source: PISA 2022\")+\n  theme(axis.title.y= element_text(angle=0), \n        axis.title.y.right = element_text(angle=0, vjust = 1),\n        panel.grid.major = element_line(color= 'grey', size = 0.1),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'),\n        plot.caption = element_text(hjust = 0))\np1\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=stu_qqq_SG_MRS, \n             aes(x = AVEREAD )) +\n  # plot histogram\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"#666666\",\n                 fill=\"light blue\") +\n  # add mean math reading line\n  geom_vline(aes(xintercept = mean(AVEREAD)),\n             linetype= 'dashed',\n             size= .4,\n             color= '#0e2f44') +\n  # annotation for mean reading score line \n  geom_text(aes(mean(AVEMATH), 65, \n                label= 'Mean of Reading Score',\n                hjust= 1, vjust= -25),\n            check_overlap = T,\n            color= '#0e2f44') +\n  labs(y= 'No. of\\nStudents', x= 'Reading Score from PISA',\n       title = \"Distribution of Students' Reading Score from PISA 2022 Results\",\n       subtitle= 'Singapore Students aged 15 in 2022',\n       caption = \"Source: PISA 2022\")+\n  theme(axis.title.y= element_text(angle=0), \n        axis.title.y.right = element_text(angle=0, vjust = 1),\n        panel.grid.major = element_line(color= 'grey', size = 0.1),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'),\n        plot.caption = element_text(hjust = 0))\n\np2\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=stu_qqq_SG_MRS, \n             aes(x = AVESCI )) +\n  # plot histogram\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"#666666\",\n                 fill=\"light blue\") +\n  # add mean science reading line\n  geom_vline(aes(xintercept = mean(AVESCI)),\n             linetype= 'dashed',\n             size= .4,\n             color= '#0e2f44') +\n  # annotation for mean Science score line \n  geom_text(aes(mean(AVEMATH), 65, \n                label= 'Mean of Science Score',\n                hjust= 1, vjust= -25),\n            check_overlap = T,\n            color= '#0e2f44') +\n  labs(y= 'No. of\\nStudents', x= 'Science Score from PISA',\n       title = \"Distribution of Students' Science Score from PISA 2022 Results\",\n       subtitle= 'Singapore Students aged 15 in 2022',\n       caption = \"Source: PISA 2022\")+\n  theme(axis.title.y= element_text(angle=0), \n        axis.title.y.right = element_text(angle=0, vjust = 1),\n        panel.grid.major = element_line(color= 'grey', size = 0.1),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'),\n        plot.caption = element_text(hjust = 0))\n\np3"
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#original-design-1",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#original-design-1",
    "title": "Take-Home Exercise 2",
    "section": "5.1 Original Design",
    "text": "5.1 Original Design\nThe original design is shown below:\n\nThe above is a boxplot to show the comparison between the various subjects among female and male."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#clarity-1",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#clarity-1",
    "title": "Take-Home Exercise 2",
    "section": "5.2 Clarity",
    "text": "5.2 Clarity\n\n5.1.1 Graph Title\nInteresting insight from the graph can be put as a main title. The graph title should be interesting to grab the attention of readers. In addition, putting F and M may be misleading to the readers\n\n\n5.2.1 Axes Labelling\nAxes labels must be meaningful to ensure readers are aware of what the axes represents. Names such as AVEMATH and Factor() can be misleading and can be improved to be more specific."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#aesthetics-1",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#aesthetics-1",
    "title": "Take-Home Exercise 2",
    "section": "5.3 Aesthetics",
    "text": "5.3 Aesthetics\n\n5.3.1 Colour\nGrey Background can be improved to give a more clean and professional look.\n\n\n5.3.2 Title and Axes Label\nIn addition, the boxplots can be combined and also the title can be improved to be more readable. The rotation of y-axis label should be changed to ensure readability as well. Spelling of the y and x axis label can be adjusted accordingly to a give a more formal formatting (e.g. first letter of each word is capitalised while the rest is not). If legends are used, it should be labelled clearly."
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#propose-sketch",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#propose-sketch",
    "title": "Take-Home Exercise 2",
    "section": "5.4 Propose sketch",
    "text": "5.4 Propose sketch"
  },
  {
    "objectID": "take_home_ex/take_home_ex02/take_home_ex02.html#final-design-1",
    "href": "take_home_ex/take_home_ex02/take_home_ex02.html#final-design-1",
    "title": "Take-Home Exercise 2",
    "section": "5.5 Final Design",
    "text": "5.5 Final Design\n\nstu_qqq_SG_MRS_filtered &lt;- stu_qqq_SG_MRS %&gt;%\n  filter(ST004D01T == 1 | ST004D01T == 2)\n\n\ncombined_boxplot &lt;- ggplot(data = stu_qqq_SG_MRS_filtered, \n                           aes(x = factor(ST004D01T), group = factor(ST004D01T))) +\n  geom_boxplot(aes(y = AVEMATH, color = \"Math Score\"), position = position_dodge(width = 0.75), width = 0.6) +\n  geom_boxplot(aes(y = AVEREAD, color = \"Reading Score\"), position = position_dodge(width = 0.75), width = 0.6) +\n  geom_boxplot(aes(y = AVESCI, color = \"Science Score\"), position = position_dodge(width = 0.75), width = 0.6) +\n  stat_summary(aes(y = AVEMATH), geom = \"point\", fun.y = \"mean\", color = \"blue\", position = position_dodge(width = 0.75), size = 4) +\n  stat_summary(aes(y = AVEREAD), geom = \"point\", fun.y = \"mean\", color = \"green\", position = position_dodge(width = 0.75), size = 4) +\n  stat_summary(aes(y = AVESCI), geom = \"point\", fun.y = \"mean\", color = \"orange\", position = position_dodge(width = 0.75), size = 4) +\n  scale_color_manual(values = c(\"Math Score\" = \"blue\", \"Reading Score\" = \"green\", \"Science Score\" = \"orange\")) +\n  scale_x_discrete(labels = c(\"Female\", \"Male\")) +\n  ggtitle(\"Comparison of Math, Reading and Science Score by Gender\") +\n  labs(\n    subtitle= 'Singapore Students aged 15 in 2022',\n    caption = \"Source: PISA 2022\",\n    x = \"Gender\",\n    y = \"Score\"\n  ) +\n  theme_minimal()+\n  theme(axis.text.y = element_text(angle = 0, hjust = 0, vjust = 0),\n        axis.title.y = element_text(angle = 0))\n  \n\ncombined_boxplot"
  },
  {
    "objectID": "take_home_ex/take_home_ex03/take_home_ex03.html",
    "href": "take_home_ex/take_home_ex03/take_home_ex03.html",
    "title": "Take-Home Exercise 3",
    "section": "",
    "text": "From NCCS, Singapore is vulnerable to the effects of climate change, evident in the rise in annual mean temperature from 26.9°C to 28.0°C between 1980 and 2020. Additionally, the mean sea level in the Straits of Singapore escalated by 1.2mm to 1.7mm annually from 1975 to 2009.\nIn recent years, rainfall intensity has heightened, with the annual rainfall total for Singapore experiencing an average increase of 67 mm per decade from 1980 to 2019.\nBelow shows the visualisation presented by NCCS\n\nThis take home exercise will explore ways of using visual interactivity and visualising uncertainty methods to validate the claims presented above."
  },
  {
    "objectID": "take_home_ex/take_home_ex03/take_home_ex03.html#data-visualisation-design",
    "href": "take_home_ex/take_home_ex03/take_home_ex03.html#data-visualisation-design",
    "title": "Take-Home Exercise 3",
    "section": "6.1 Data visualisation design",
    "text": "6.1 Data visualisation design\n\n6.1.1 Clarity - Graph Title\nInteresting insight from the graph can be put as a main title. The graph title can be interesting to grab the attention of readers.\n\n\n6.1.2 Clarity- Axes Labelling\nAxes labels must be meaningful to ensure readers are aware of what the axes represents. \n\n\n6.1.3 Aesthetics - Colour\nColour should be different from the background. In addition, there should be colour to differentiate between the high rainfall and low rainfall."
  },
  {
    "objectID": "take_home_ex/take_home_ex03/take_home_ex03.html#interactivity-principles",
    "href": "take_home_ex/take_home_ex03/take_home_ex03.html#interactivity-principles",
    "title": "Take-Home Exercise 3",
    "section": "6.2 Interactivity Principles",
    "text": "6.2 Interactivity Principles\n\n6.2.1 Animation\nAnimation may not be required in this interactive visualisation as the purpose is for readers to sieve out if the annual total rainfall rose by 101mm per decade. In my example I will be using Dec of the selected years as a proxy. This will be important to link back to the future climate projections mentioned by NCCS\n\n\n6.2.2 View manipulation: selection function\nPointer is needed to show the year and rainfall when selected. This will give users a guidance to the points they are looking at. Plotly will enable users to select specify areas using lasso or box format"
  },
  {
    "objectID": "take_home_ex/take_home_ex03/take_home_ex03.html#data-visualisation-1",
    "href": "take_home_ex/take_home_ex03/take_home_ex03.html#data-visualisation-1",
    "title": "Take-Home Exercise 3",
    "section": "7.1 Data Visualisation",
    "text": "7.1 Data Visualisation\n\ngg_plot &lt;- ggplot(combined_rainfall_1, aes(x = Date, y = Rainfall,color = Rainfall)) +\n  geom_point() +\n  theme_minimal()+\n  geom_hline(yintercept = mean(combined_rainfall_1$Rainfall), linetype = \"dashed\", color = \"red\", linewidth = 1) +\n  annotate(\"text\", x = median(combined_rainfall_1$Date), y = median(combined_rainfall_1$Rainfall), \n           label = paste(\"Average Rainfall:\", round(mean(combined_rainfall_1$Rainfall), 2), \"mm\"), size=3,\n           vjust = -1, hjust = 1, color = \"red\")+\nlabs(y= 'Rainfall (mm)', x= 'Year',title = \"Clementi - 40 Years of Rainfall: 1983 to 2023\",\n       subtitle= 'Period: Dec-83, Jun-93, Dec-03, Jun-13, Dec-23',\n       caption = \"Source: Meteorological Service Singapore\")+\n   theme(axis.title.y= element_text(angle=0), \n        axis.title.y.right = element_text(angle=0, vjust = 1),\n        panel.grid.major = element_line(color= 'grey', size = 0.1),\n        panel.background= element_blank(), \n        axis.line= element_line(color= 'grey'),\n        plot.caption = element_text(hjust = 0))\n\ngg_plot"
  },
  {
    "objectID": "take_home_ex/take_home_ex03/take_home_ex03.html#interactive-visualisation",
    "href": "take_home_ex/take_home_ex03/take_home_ex03.html#interactive-visualisation",
    "title": "Take-Home Exercise 3",
    "section": "7.2 Interactive Visualisation",
    "text": "7.2 Interactive Visualisation\n\ngg_plot &lt;- ggplot(combined_rainfall_1, aes(x = Date, y = Rainfall,color = Rainfall)) +\n  geom_point() +\n  labs(title = 'Clementi - 40 Years of Rainfall: 1983 to 2023', x = 'Year', y = 'Daily Rainfall (mm)') +\n  theme_minimal()+\n  geom_hline(yintercept = mean(combined_rainfall_1$Rainfall), linetype = \"dashed\", color = \"red\", linewidth = 1) +\n  annotate(\"text\", x = median(combined_rainfall_1$Date), y = median(combined_rainfall_1$Rainfall), \n           label = paste(\"Average Rainfall:\", round(mean(combined_rainfall_1$Rainfall), 2), \"mm\"), size=3,\n           vjust = -1, hjust = 1, color = \"red\")+\n  scale_color_gradient(low = \"blue\", high = \"red\")\n  \n  \n\ninteractive_plot &lt;- ggplotly(gg_plot)\n\ninteractive_plot"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/data/geospatial/MPSZ-2019.html",
    "href": "take_home_ex/take_home_ex04/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html",
    "title": "Take-Home Exercise 4",
    "section": "",
    "text": "In this take-home exercise, I will be selecting one of the modules of my team’s project proposed Shiny application. I will be working on storyboard 3: Geospatial Visualisation."
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#the-data",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#the-data",
    "title": "Take-Home Exercise 4",
    "section": "3.1 The data",
    "text": "3.1 The data\n\nThe first dataset will from Energy Market Authority. I am using the tidy data.\n\nThe second dataset will be Master Plan 2019 Subzone Boundary (Web) (i.e. MP14_SUBZONE_WEB_PL) in ESRI shapefile format. It can be downloaded at data.gov.sg This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2019.\nThe third dataset will be population data. I will download from: https://tablebuilder.singstat.gov.sg/table/CT/8186#!"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#data-import-and-preparation",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#data-import-and-preparation",
    "title": "Take-Home Exercise 4",
    "section": "3.2 Data Import and Preparation",
    "text": "3.2 Data Import and Preparation\n\n3.2.1 Importing Geospatial Data into R\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MPSZ-2019\")\n\nReading layer `MPSZ-2019' from data source \n  `C:\\czx0727\\ISSS608-VAA\\take_home_ex\\take_home_ex04\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\n\nmpsz\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((103.8802 1....\n2        CR MULTIPOLYGON (((103.8376 1....\n3        CR MULTIPOLYGON (((103.8341 1....\n4        WR MULTIPOLYGON (((103.7125 1....\n5        CR MULTIPOLYGON (((103.8472 1....\n6        CR MULTIPOLYGON (((103.8987 1....\n7        WR MULTIPOLYGON (((103.7235 1....\n8        WR MULTIPOLYGON (((103.76 1.21...\n9        CR MULTIPOLYGON (((103.8591 1....\n10       CR MULTIPOLYGON (((103.8232 1....\n\n\n\n\n3.2.2 Importing Attribute Data into R\n\nSES_2 &lt;- read_excel(\"data/SES_Public_2023_tidy.xlsx\", sheet = \"T3.5\")\n\n\nstr(SES_2)\n\ntibble [70,706 × 6] (S3: tbl_df/tbl/data.frame)\n $ dwelling_type: chr [1:70706] \"1-room / 2-room\" \"1-room / 2-room\" \"1-room / 2-room\" \"1-room / 2-room\" ...\n $ year         : num [1:70706] 2005 2005 2005 2005 2005 ...\n $ month        : chr [1:70706] \"1\" \"1\" \"1\" \"1\" ...\n $ Region       : chr [1:70706] \"Central Region\" \"Central Region\" \"Central Region\" \"Central Region\" ...\n $ Description  : chr [1:70706] \"Bishan\" \"Bukit Merah\" \"Central Region\" \"Geylang\" ...\n $ kwh_per_acc  : num [1:70706] 105 141 136 148 116 ...\n\n\nI will keep to 2023, and overall with annual data\n\nSES_2_1 &lt;- SES_2 %&gt;%\n  filter(year == 2023, month == \"Annual\", dwelling_type == \"Overall\", Description != \"Central Region\", Description != \"North Region\", Description != \"North East Region\",Description != \"Overall\", Description != \"West Region\")\n\nConvert areas to upper case.\n\nSES_2_1 &lt;- SES_2_1 %&gt;%\n  mutate_at(.vars = vars(Description), \n          .funs = funs(toupper))\n\n\n\n3.2.3 Creating a sf data frame from an aspatial data frame\n\nmpsz_SES &lt;- left_join(mpsz, SES_2_1,\n                          by = c(\"PLN_AREA_N\" = \"Description\"))\n\nI will remove rows with NA.\n\nmpsz_SES_filtered &lt;- mpsz_SES %&gt;%\n  mutate(kwh_per_acc = coalesce(kwh_per_acc, 0),dwelling_type = coalesce(dwelling_type, \"NA\"))%&gt;%\n  select(SUBZONE_N, dwelling_type,kwh_per_acc, geometry) \n\nI will save the file to rds\n\nwrite_rds(mpsz_SES_filtered, \"data/rds/mpsz_SES_filtered.rds\")\n\nI will import the rds file\n\nmpsz_SES_filtered &lt;- read_rds(\"data/rds/mpsz_SES_filtered.rds\")"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#colour",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#colour",
    "title": "Take-Home Exercise 4",
    "section": "4.1 Colour",
    "text": "4.1 Colour\nIn terms of colour, I should avoid multiple colours as it will cause confusion to readers. I should stick with a single hue (or a small set of closely related hues) and vary intensity from pale colours for low values to increasingly darker and brighter colours for high values."
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#graph-title",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#graph-title",
    "title": "Take-Home Exercise 4",
    "section": "4.2 Graph Title",
    "text": "4.2 Graph Title\nInteresting insight from the graph can be put as a main title. The graph title can be interesting to grab the attention of readers."
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#legend",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#legend",
    "title": "Take-Home Exercise 4",
    "section": "4.3 Legend",
    "text": "4.3 Legend\nLegend will need to be clear to indicate the range and what it entails."
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#viewing",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#viewing",
    "title": "Take-Home Exercise 4",
    "section": "4.4 Viewing",
    "text": "4.4 Viewing\nVisualisation should be easy to view and do not consist of a lot of information."
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#data-wrangling",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#data-wrangling",
    "title": "Take-Home Exercise 4",
    "section": "6.1 Data Wrangling",
    "text": "6.1 Data Wrangling\nManual cleaning is required in the excel as it consists on rows that will not be used.\n\n6.1.1 Importing Attribute Data into R\n\npopdata &lt;- read_csv(\"data/respopagesextod2011to2020.csv\")\n\nI will group the population together by the region.\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ)%&gt;%\n  summarise(`POP` = sum(`Pop`))\n\nI will change region name to uppercase\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper))\n\nI will join the data together\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nI will write the results to rds\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\nI will import the rds\n\nmpsz_pop2020 &lt;- read_rds(\"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#plotting-of-choropleth-map",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#plotting-of-choropleth-map",
    "title": "Take-Home Exercise 4",
    "section": "6.2 Plotting of choropleth map",
    "text": "6.2 Plotting of choropleth map\n\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\nqtm(mpsz_pop2020, \n    fill = \"POP\",\n    title = \"Singapore's population in 2020\") +\n  tm_borders()\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"POP\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Singapore Population\") +\n  tm_layout(main.title = \"Singapore's population by region in 2020\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nI will plot the 2 maps side by side now\n\nelecmap &lt;- tm_shape(mpsz_SES_filtered)+\n  tm_fill(\"kwh_per_acc\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Electricity Consumption in kwh_per_acc\") +\n  tm_layout(main.title = \"Total Household Electricity Consumption by Household in 2023\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and electricity data from Energy Marketing Authority (EMA)\", \n             position = c(\"left\", \"bottom\"))\n\npopmap &lt;- tm_shape(mpsz_pop2020)+\n  tm_fill(\"POP\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Singapore Population\") +\n  tm_layout(main.title = \"Singapore's population by region in 2020\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics\", \n             position = c(\"left\", \"bottom\"))\n\ntmap_arrange(elecmap, popmap, asp=1, ncol=2)\n\n\n\n\n\ntmap_mode(\"view\")\n\n\nelecmap &lt;- tm_shape(mpsz_SES_filtered)+\n  tm_fill(\"kwh_per_acc\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Electricity Consumption in kwh_per_acc\") +\n  tm_layout(main.title = \"Total Household Electricity Consumption by Household in 2023\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and electricity data from Energy Marketing Authority (EMA)\", \n             position = c(\"left\", \"bottom\"))\n\npopmap &lt;- tm_shape(mpsz_pop2020)+\n  tm_fill(\"POP\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Singapore Population\") +\n  tm_layout(main.title = \"Singapore's population by region in 2020\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling from Department of Statistics)\", \n             position = c(\"left\", \"bottom\"))\n\ntmap_arrange(elecmap, popmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#proposed-sketch",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#proposed-sketch",
    "title": "Take-Home Exercise 4",
    "section": "7.1 Proposed Sketch",
    "text": "7.1 Proposed Sketch\nThe image below shows the sketch of the prototype"
  },
  {
    "objectID": "take_home_ex/take_home_ex04/take_home_ex04.html#shiny-layout-and-ui-design",
    "href": "take_home_ex/take_home_ex04/take_home_ex04.html#shiny-layout-and-ui-design",
    "title": "Take-Home Exercise 4",
    "section": "7.2 Shiny layout and UI Design",
    "text": "7.2 Shiny layout and UI Design\n\n7.2.1 Shiny Layout Panels\nThe side panel can be used to select the year, month, region and dwelling types.\n\n\n\n7.2.2 Shiny UI\nThe side panel should consist of the following:\nYear - It can be a slicerinput/ dropdown box (selectInput)\nMonth - It can be a slicerinput/ dropdown box (selectInput)\nRegion - It can be a dropdown box (selectInput)\nDwelling types - It can be a dropdown box (selectInput)\n\n\n\n\n\n\nNote\n\n\n\nMight not need to include as this is for another tab\n\n\nSubmit button - To refresh the data after selecting the region\nOther features can be included in the main panel/Overview:\n\nMaximum (Average Household Electricity Consumption)\nMinimum(Average Household Electricity Consumption)\nMaximum Population\nMinimum Population\n\nIt should be linked with the other tabs of the different modules."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application. I am Zhixuan! 😀\nIn this website, I will share my learning journey for this course. This website is made with the guidance from Prof Kam.\nCourse information is located here.\n\n\nImage obtained from here\n\n\n\nDate\nTopic\nHands-on Ex\nIn-class Ex\n\n\n\n\n13 Jan 2024\nIntroduction to Visual Analytics\nlink\nlink\n\n\n20 Jan 2024\nDesigning Graphs to Enlighten\nlink\nlink\n\n\n27 Jan 2024\nInteractivity in Visual Analytics\nlink and link\nlink\n\n\n3 Feb 2024\nFundamentals of Visual Analytics\nlink\nlink\n\n\n17 Feb 2024\nVisual Multivariate Analysis\nlink\nlink\n\n\n24 Feb 2024\nVisualising and Analysing Time-Oriented Data\nlink\nlink\n\n\n2 Mar 2024\nVisualising and Analysing Geographic Data\nlink\nlink\n\n\n9 Mar 2024\nNetwork Data Visualisation and Analysis\nlink\nlink\n\n\n16 Mar 2024\nVisualising and Analysing Text Data\nlink\nlink\n\n\n23 Mar 2024\nInformation Dashboard Design\nlink\nlink\n\n\n30 Mar 2024\nPoster Presentation\n\n\n\n\n\nProject: link"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "There is nothing here! Please go back to the main website :)"
  },
  {
    "objectID": "in_class_ex/in_class_ex10/in_class_ex10.html",
    "href": "in_class_ex/in_class_ex10/in_class_ex10.html",
    "title": "In-Class Ex10",
    "section": "",
    "text": "Tableau Exercise\nhttps://public.tableau.com/app/profile/zhixuan.chai/viz/in-class-exercise10/Dashboard1?publish=yes"
  }
]