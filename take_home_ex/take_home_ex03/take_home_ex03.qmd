---
title: "Take-Home Exercise 3"
author: "Chai Zhixuan"
date: 2024-02-05
date-format: long
date-modified: "last-modified"
---

# 1 Overview

From [NCCS](https://www.nccs.gov.sg/singapores-climate-action/impact-of-climate-change-in-singapore/), Singapore is vulnerable to the effects of climate change, evident in the rise in annual mean temperature from 26.9°C to 28.0°C between 1980 and 2020. Additionally, the mean sea level in the Straits of Singapore escalated by 1.2mm to 1.7mm annually from 1975 to 2009.

In recent years, rainfall intensity has heightened, with the annual rainfall total for Singapore experiencing an average increase of 67 mm per decade from 1980 to 2019.

Below shows the visualisation presented by NCCS

![](images/6.PNG)

This take home exercise will explore ways of using visual interactivity and visualising uncertainty methods to validate the claims presented above.

# 2 Data Preparation

I will follow the steps as shown below. I will be downloading ***Daily Rainfall*** in **December** of the year **1983, 1993, 2003, 2013 and 2023** in **Clementi**

1.  Go to the following website: <http://www.weather.gov.sg/climate-historical-daily>

2.  \(a\) With reference to email queries wto NEA, I will make the website non-secure

    ::: callout-note
    Please note that this is only in chrome.
    :::

![](images/1.PNG)

2.  \(b\) I will click the icon beside the link

![](images/2.PNG)

2.  \(c\) Change the insecure content to allow. You will be prompted to reload the website

![](images/3.PNG)

4.  Head back to <http://www.weather.gov.sg/climate-historical-daily>. Select **Clementi**, **December** and **2023.** Then click **"Display"**

![](images/4-01.PNG)

5.  Scroll down to download the CSV file

![](images/5.PNG)

6.  I will repeat the same step to download the data for **December** of the year **1983, 1993, 2003, and 2013** in **Clementi**

# 3 Installing packages

I will use the following packages:

```{r}
pacman::p_load(readxl, gifski, gapminder,
               plotly, gganimate, tidyverse)
```

# 4 Data Wrangling 

I will import all the files downloaded. An example is shown for 1983 Dec Data. I will also select specific columns I want, mainly: ***Year, Month, Day,*** and ***Daily Rainfall***.

```{r}
#| eval: false
set1_data <- read_csv("data/DAILYDATA_S50_198312.csv",locale=locale(encoding="latin1"))

set1_data <- set1_data %>% select(Year, Month, Day, `Daily Rainfall Total (mm)`)
```

I will proceed to do the same for the other csv files

::: panel-tabset
## 1993 Dec Data

```{r}
#| eval: false
set2_data <- read_csv("data/DAILYDATA_S50_199312.csv",locale=locale(encoding="latin1"))

set2_data <- set2_data %>% select(Year, Month, Day, `Daily Rainfall Total (mm)`)
```

## 2003 Dec Data

```{r}
#| eval: false
set3_data <- read_csv("data/DAILYDATA_S50_200312.csv",locale=locale(encoding="latin1"))

set3_data <- set3_data %>% select(Year, Month, Day, `Daily Rainfall Total (mm)`)
```

## 2013 Dec Data

```{r}
#| eval: false
set4_data <- read_csv("data/DAILYDATA_S50_201312.csv",locale=locale(encoding="latin1"))

set4_data <- set4_data %>% select(Year, Month, Day, `Daily Rainfall Total (mm)`)
```

## 2023 Dec Data

```{r}
#| eval: false
set5_data <- read_csv("data/DAILYDATA_S50_202312.csv",locale=locale(encoding="latin1"))

set5_data <- set5_data %>% select(Year, Month, Day, `Daily Rainfall Total (mm)`)
```
:::

I will merge all the data together and save to rds file

```{r}
#| eval: false
combined_rainfall <- bind_rows(set1_data,set2_data,set3_data,set4_data,set5_data)
```

```{r}
#| eval: false
write_rds(combined_rainfall,
          "data/combined_rainfall.rds")
```

I will read back the rds file.

```{r}
combined_rainfall <- read_rds("data/combined_rainfall.rds")
```

I will first have a look at the data structure

```{r}
str(combined_rainfall)
```

I will rename the Daily Rainfall Total (mm) to Daily Rainfall

```{r}
combined_rainfall <- combined_rainfall %>%
   rename("Rainfall" = "Daily Rainfall Total (mm)")
```

# 5 Proposed Sketch

selection of data visualisation techniques

# 6 Data Visualisation Design

interactivity principles and best practices

```{r}

gg_plot <- ggplot(combined_rainfall, aes(x = as.Date(paste(Year, Month, Day, sep = "-")), y = Rainfall)) +
  geom_point(aes(size = Rainfall,frame = Year)) +
  labs(title = 'Clementi - Daily Rainfall (mm)', x = 'Date', y = 'Rainfall (mm)') +
  theme_minimal()

interactive_plot <- ggplotly(gg_plot)

interactive_plot

```
