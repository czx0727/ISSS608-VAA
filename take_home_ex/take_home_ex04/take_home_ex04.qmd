---
title: "Take-Home Exercise 4"
author: "Chai Zhixuan"
date: 2024-02-28
date-format: long
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
  warning: false
  message: false
---

# 1 Overview

In this take-home exercise, I will be selecting one of the modules of my team's [project](https://isss608-team13.netlify.app/proposal#data-visualisation-methods) proposed Shiny application. I will be working on storyboard 3: Geospatial Visualisation.

# **2. Setting the Analytical Tools**

```{r}
pacman::p_load(sf,  readxl, tmap, tidyverse)
```

# 3. Data Preparation

## **3.1 The data**

-   The first dataset will from [Energy Market Authority](#0). I am using the tidy data.

    ![](images/1-06.PNG)

-   The second dataset will be Master Plan 2019 Subzone Boundary (Web) (i.e.Â `MP14_SUBZONE_WEB_PL`) in ESRI shapefile format. It can be downloaded at [data.gov.sg](https://data.gov.sg/) This is a geospatial data. It consists of the geographical boundary of Singapore at the planning subzone level. The data is based on URA Master Plan 2019.

-   The third dataset will be population data. I will download from: [https://tablebuilder.singstat.gov.sg/table/CT/8186#!](https://tablebuilder.singstat.gov.sg/table/CT/8186#!https://tablebuilder.singstat.gov.sg/table/CT/8186#!)

## **3.2 Data Import and Preparation**

### **3.2.1 Importing Geospatial Data into R**

```{r}
mpsz <- st_read(dsn = "data/geospatial", 
                layer = "MPSZ-2019")
```

```{r}
mpsz
```

### **3.2.2 Importing Attribute Data into R**

```{r,warning=FALSE}
SES_2 <- read_excel("data/SES_Public_2023_tidy.xlsx", sheet = "T3.5")
```

```{r}
str(SES_2)
```

I will keep to 2023, and overall with annual data

```{r}
SES_2_1 <- SES_2 %>%
  filter(year == 2023, month == "Annual", dwelling_type == "Overall", Description != "Central Region", Description != "North Region", Description != "North East Region",Description != "Overall", Description != "West Region")
```

Convert areas to upper case.

```{r, warning=FALSE}
SES_2_1 <- SES_2_1 %>%
  mutate_at(.vars = vars(Description), 
          .funs = funs(toupper))
```

### **3.2.3 Creating a sf data frame from an aspatial data frame**

```{r}
mpsz_SES <- left_join(mpsz, SES_2_1,
                          by = c("PLN_AREA_N" = "Description"))
```

I will remove rows with *NA*.

```{r}
mpsz_SES_filtered <- mpsz_SES %>%
  mutate(kwh_per_acc = coalesce(kwh_per_acc, 0),dwelling_type = coalesce(dwelling_type, "NA"))%>%
  select(SUBZONE_N, dwelling_type,kwh_per_acc, geometry) 
```

I will save the file to rds

```{r}
write_rds(mpsz_SES_filtered, "data/rds/mpsz_SES_filtered.rds")
```

I will import the rds file

```{r}
mpsz_SES_filtered <- read_rds("data/rds/mpsz_SES_filtered.rds")
```

# 4 Selection of data visualisation techniques used

Since this is related to geospatial, **choropleth map** will be used. A key aspect will be the appropriate number of classes to be used.

## 4.1 Colour

In terms of colour, I should avoid multiple colours as it will cause confusion to readers. I should stick with a single hue (or a small set of closely related hues) and vary intensity from pale colours for low values to increasingly darker and brighter colours for high values.

## 4.2 **Graph Title**

Interesting insight from the graph can be put as a main title. The graph title can be interesting to grab the attention of readers.

## 4.3 Legend

Legend will need to be clear to indicate the range and what it entails.

## 4.4 Viewing

Visualisation should be easy to view and do not consist of a lot of information.

# 5 Visualisation (Electricity)

```{r,warning=FALSE}
tmap_mode("view")
tmap_options(check.and.fix = TRUE)
qtm(mpsz_SES_filtered, 
    fill = "kwh_per_acc",
    title = "Electricity Consumption") +
  tm_borders()
```

```{r}
tmap_mode("plot")
```

```{r,warning=FALSE}
tm_shape(mpsz_SES_filtered)+
  tm_fill("kwh_per_acc", 
          style = "quantile", 
          palette = "Blues",
          title = "Electricity Consumption in kwh_per_acc") +
  tm_layout(main.title = "Total Household Electricity Consumption by Household in 2023",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and electricity data from Energy Marketing Authority (EMA)", 
             position = c("left", "bottom"))
```

# 6 Visualisation (Population)

The above data cleaning process and visualisation is for electricity data. I will do the same for popluation data

## 6.1 Data Wrangling

Manual cleaning is required in the excel as it consists on rows that will not be used.

### **6.1.1 Importing Attribute Data into R**

```{r, warning=FALSE}
popdata <- read_csv("data/respopagesextod2011to2020.csv")
```

I will group the population together by the region.

```{r, warning=FALSE}
popdata2020 <- popdata %>%
  filter(Time == 2020) %>%
  group_by(PA, SZ)%>%
  summarise(`POP` = sum(`Pop`))
```

I will change region name to uppercase

```{r, warning=FALSE}
popdata2020 <- popdata2020 %>%
  mutate_at(.vars = vars(PA, SZ), 
          .funs = funs(toupper))
```

I will join the data together

```{r}
mpsz_pop2020 <- left_join(mpsz, popdata2020,
                          by = c("SUBZONE_N" = "SZ"))
```

I will write the results to rds

```{r}
write_rds(mpsz_pop2020, "data/rds/mpszpop2020.rds")
```

I will import the rds

```{r}
mpsz_pop2020 <- read_rds("data/rds/mpszpop2020.rds")
```

## 6.2 Plotting of choropleth map

```{r,warning=FALSE}
tmap_mode("view")
tmap_options(check.and.fix = TRUE)
qtm(mpsz_pop2020, 
    fill = "POP",
    title = "Singapore's population in 2020") +
  tm_borders()

```

```{r}
tmap_mode("plot")
```

```{r,warning=FALSE}
tm_shape(mpsz_pop2020)+
  tm_fill("POP", 
          style = "quantile", 
          palette = "Blues",
          title = "Singapore Population") +
  tm_layout(main.title = "Singapore's population by region in 2020",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and Population data from Department of Statistics", 
             position = c("left", "bottom"))
```

I will plot the 2 maps side by side now

```{r, warning = FALSE}
#| fig-width: 12
#| fig-height: 10
elecmap <- tm_shape(mpsz_SES_filtered)+
  tm_fill("kwh_per_acc", 
          style = "quantile", 
          palette = "Blues",
          title = "Electricity Consumption in kwh_per_acc") +
  tm_layout(main.title = "Total Household Electricity Consumption by Household in 2023",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and electricity data from Energy Marketing Authority (EMA)", 
             position = c("left", "bottom"))

popmap <- tm_shape(mpsz_pop2020)+
  tm_fill("POP", 
          style = "quantile", 
          palette = "Blues",
          title = "Singapore Population") +
  tm_layout(main.title = "Singapore's population by region in 2020",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and Population data from Department of Statistics", 
             position = c("left", "bottom"))

tmap_arrange(elecmap, popmap, asp=1, ncol=2)
```

```{r}
tmap_mode("view")
```

```{r}
#| fig-width: 12
#| fig-height: 10
elecmap <- tm_shape(mpsz_SES_filtered)+
  tm_fill("kwh_per_acc", 
          style = "quantile", 
          palette = "Blues",
          title = "Electricity Consumption in kwh_per_acc") +
  tm_layout(main.title = "Total Household Electricity Consumption by Household in 2023",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and electricity data from Energy Marketing Authority (EMA)", 
             position = c("left", "bottom"))

popmap <- tm_shape(mpsz_pop2020)+
  tm_fill("POP", 
          style = "quantile", 
          palette = "Blues",
          title = "Singapore Population") +
  tm_layout(main.title = "Singapore's population by region in 2020",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling from Department of Statistics)", 
             position = c("left", "bottom"))

tmap_arrange(elecmap, popmap, asp=1, ncol=2)
```

```{r}
tmap_mode("plot")
```

# 7. UI design

## 7.1 Proposed Sketch

The image below shows the sketch of the prototype

![](images/1-07.png)

## 7.2 Shiny layout and UI Design

### 7.2.1 Shiny Layout Panels

The side panel can be used to select the year, month, region and dwelling types.

![](images/2.PNG)

### 7.2.2 Shiny UI

The side panel should consist of the following:

**Year** - It can be a slicerinput/ dropdown box (selectInput)

**Month** - It can be a slicerinput/ dropdown box (selectInput)

**Region** - It can be a dropdown box (selectInput)

**Dwelling types** - It can be a dropdown box (selectInput)

::: callout-note
Might not need to include as this is for another tab
:::

**Submit button** - To refresh the data after selecting the region

**Other features can be included in the main panel/Overview:**

-   Maximum (Average Household Electricity Consumption)

-   Minimum(Average Household Electricity Consumption)

-   Maximum Population

-   Minimum Population

It should be linked with the other tabs of the different modules.

# 8 Storyboard

Below is the mockup of the storyboard:

![](images/3.PNG)
