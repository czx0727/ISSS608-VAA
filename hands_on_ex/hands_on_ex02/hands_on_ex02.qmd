---
title: "Hands-On Ex 2"
author: "Chai Zhixuan"
date: 2024-01-08
date-format: long
date-modified: "last-modified"
---

# **Getting Started**

This hands-on exercise is onÂ **Beyond ggplot2 Fundamentals.**

::: callout-note
## Zhixuan's personal learning outcomes

1.  Learn ggplot2 extensions
2.  Understanding how it can be linked to work
:::

## **Installing and loading the required libraries**

In this exercise, beside tidyverse, four R packages will be used. They are:

-   [ggrepel](https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html): an R package provides geoms for ggplot2 to repel overlapping text labels.

-   [ggthemes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/): an R package provides some extra themes, geoms, and scales for 'ggplot2'.

-   [hrbrthemes](https://cran.r-project.org/web/packages/hrbrthemes/index.html): an R package provides typography-centric themes and theme components for ggplot2.

-   [patchwork](https://cran.r-project.org/web/packages/patchwork/vignettes/patchwork.html): an R package for preparing composite figure created using ggplot2.

Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## **Importing data**

The code chunk below importsÂ *exam_data.csv*Â into R environment by usingÂ [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html)Â function ofÂ [**readr**](https://readr.tidyverse.org/)Â package.Â **readr**Â is one of the tidyverse package.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

## **Beyond ggplot2 Annotation: ggrepel**

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE, message=FALSE}
#| eval: true
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## The code

```{r}
#| eval: false
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

::: callout-note
Plot is hard to visualise. Not recommended as I cannot see anything
:::

## **Working with ggrepel**

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE, message=FALSE}
#| eval: true

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## The code

```{r}
#| eval: false
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

::: callout-note
Plot shows clearly the points as well as the student 289, 321, 305, 177, 227
:::

## **Beyond ggplot2 Themes**

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE}
#| eval: true
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 

```

## The code

```{r}
#| eval: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```
:::

::: callout-note
ThisÂ [link](https://ggplot2.tidyverse.org/reference/#themes)Â shows more about ggplot2Â `Themes.`
:::

I will try a few more themes:

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_test() +
  ggtitle("Distribution of Maths scores") 
```

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_void() +
  ggtitle("Distribution of Maths scores") 
```

## **Working with ggtheme package**

Â *The Economist*Â theme is used.

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE}
#| eval: true
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()

```

## The code

```{r}
#| eval: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```
:::

I proceed to try another [theme](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/)

```{r}
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_wsj()
```

```{r}
ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of English scores") +
  theme_stata()
```

## **Working with hrbthems package**

From guidance of Prof Kam, [**hrbrthemes**](https://cinc.rud.is/web/packages/hrbrthemes/)Â package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE}
#| eval: true
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()

```

## The code

```{r}
#| eval: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

::: panel-tabset
## The plot

```{r, echo=FALSE, warning =FALSE}
#| eval: true

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")

```

## The code

```{r}
#| eval: false
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")

```
:::

::: callout-note
Vertical grid-line is removed. To take note
:::

## **Beyond Single Graph**

Math histogram is plot

::: panel-tabset
## The code

```{r}

p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")

p1

```
:::

English histogram is plot

::: panel-tabset
## The code

```{r}


p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")

p2

```
:::

I draw a scatterplot for English score versus Maths score by as shown below

::: panel-tabset
## The code

```{r}

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

p3

```
:::

## **Combining two ggplot2 graphs**

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE, message=FALSE}
#| eval: true

p1 + p2
```

## The code

```{r}
#| eval: false

p1 + p2

```
:::

::: callout-note
What if I need to combine more? ðŸ˜…
:::

## **Combining three ggplot2 graphs**

::: callout-note
Please note on the following

-   "\|" operator to stack two ggplot2 graphs,

-   "/" operator to place the plots beside each other,

-   "()" operator the define the sequence of the plotting.
:::

Please refer this [link](https://patchwork.data-imaginist.com/articles/guides/assembly.html) for more

::: panel-tabset
## The plot

```{r, echo=FALSE, warning=FALSE, message=FALSE}
#| eval: true

(p1 / p2) | p3
```

## The code

```{r}
#| eval: false

(p1 / p2) | p3
```
:::

I change to the following

```{r}
(p1 / p2 / p3)
```

## **Creating a composite figure with tag**

From guidance of Prof, withÂ [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html)Â ofÂ **patchwork**, we can place one or several plots or graphic elements freely on top or below another plot.

::: panel-tabset
## The plot

```{r, echo=FALSE, message=FALSE}
#| eval: true

((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

## The code

```{r}
#| eval: false

((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```
:::

## **Creating figure with insert**

::: panel-tabset
## The plot

```{r, echo=FALSE, message=FALSE}
#| eval: true

p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```

## The code

```{r}
#| eval: false

p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)

```
:::

::: callout-note
Not as appealing and potentially confusing. But good to know I can insert a chart inside another
:::

## **Creating a composite figure by using patchwork and ggtheme**

::: panel-tabset
## The plot

```{r, echo=FALSE,message=FALSE}
#| eval: true

patchwork <- (p1 / p2) | p3
patchwork & theme_economist()

```

## The code

```{r}
#| eval: false

patchwork <- (p1 / p2) | p3
patchwork & theme_economist()

```
:::

::: callout-note
This is nice! To take note for work and assignment in this course
:::

I try with wsj theme:

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_wsj()

```
